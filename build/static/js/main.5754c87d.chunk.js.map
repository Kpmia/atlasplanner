{"version":3,"sources":["assets/icon.svg","pages/firebase.js","pages/LiveEvent/utils/LiveSiteUtil.js","pages/networking/endpoints.js","pages/networking/events/EventManager.js","pages/networking/events/EventService.js","pages/networking/organizations/OrgManager.js","pages/networking/organizations/OrgService.js","pages/networking/sessions/SessionManager.js","pages/networking/sessions/SessionService.js","pages/networking/demo/Demo.js","pages/LoginPage.js","globalcomp/UserDropDown.js","pages/LoadingPage.js","pages/PageNotFound.js","pages/allevents/components/AddEventModal.js","globalcomp/ExitDemoModal.js","pages/allevents/AllEventsPage.js","pages/LiveEvent/components/DeleteMentorModal.js","pages/LiveEvent/components/ReserveMentor.js","pages/LiveEvent/subtabs/Mentors.js","pages/LiveEvent/subtabs/TodaySession.js","pages/LiveEvent/subtabs/SubTabManager.js","pages/LiveEvent/LiveEventPage.js","pages/mentors/MentorForm.js","pages/Event/EventPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LiveSiteUtils","firstday","moment","startOf","toDate","lastday","endOf","monthNames","getMonth","getDate","getFullYear","name","replace","toLowerCase","atlasAPI","axios","create","baseURL","EventManager","getAllEvents","userToken","orgId","a","config","headers","get","console","log","getEvent","eventId","createEvent","event","post","deleteEvent","delete","EventService","getUserToken","Promise","resolve","reject","then","exp","unsubscribe","auth","onAuthStateChanged","user","resp","getIdTokenResult","token","OrganizationManager","getAllOrganizations","getOrganization","createOrganization","org","OrgService","SessionManager","getAllSessions","createSession","session","updateSession","sessionId","put","SessionService","eventData","sessionData","Demo","createDemoData","map","id","LoginPage","signUp","email","password","teamName","createUserWithEmailAndPassword","state","updateProfile","displayName","orgName","body","localStorage","setItem","setTimeout","window","location","href","toast","dark","login","signInWithEmailAndPassword","val","alert","hasAccount","className","this","Card","CardBody","style","padding","delay","marginBottom","InputGroup","height","color","InputGroupAddon","background","addonType","InputGroupText","borderRight","width","Input","onChange","text","setState","target","value","placeholder","marginTop","type","onClick","React","Component","getUsername","currentUser","UserBanner","teamId","useState","username","Dropdown","icon","marginLeft","Icon","Menu","Item","textAlign","signOut","clear","LoadingPage","class","PageNotFound","margin","AddEventModal","props","updateEvents","children","modal","setModal","projectName","setName","toggle","Modal","overlay","isOpen","ModalHeader","cssModule","borderBottom","paddingBottom","fontWeight","fontSize","ModalBody","Label","border","borderRadius","ModalFooter","borderTop","Button","boxShadow","ExitDemoModal","opened","open","setOpen","useEffect","basic","onClose","onOpen","size","Header","Content","Actions","inverted","AllEventsPage","pageNotFound","getEvents","events","isLoading","exitTutorial","startTutorial","introJs","setOptions","skipLabel","highlightClass","exitOnOverlayClick","showProgress","steps","title","intro","element","document","getElementById","start","onexit","match","params","getItem","src","require","Row","Col","sm","cursor","marginRight","DeletePersonModal","trigger","ReserveMentor","currWeek","timeslot","mentor","updateMentor","updateCurrMentor","setSlot","idx","setIdx","description","setDesc","reserveMentor","transition","Slide","uuid","sessions","Form","TextArea","Accordion","styled","Object","keys","time","i","person","j","Title","active","index","handleClick","Mentors","mentors","currentMentor","selectMentor","mentorId","length","textDecoration","day","times","push","sort","b","Date","includes","format","opacity","TodaySession","todayDate","columns","field","sorted","resizable","editable","headerName","availTodaySess","isAvailable","getDay","end","rows","mentorInfo","getMemberInfo","week","people","filterMode","sortModel","TabManager","updateMentors","LiveEventPage","getMentorData","updateTabData","tabName","tab","pageComponent","introStep","onafterchange","click","oncomplete","position","top","origin","toString","display","bottom","MentorForm","submitMentor","timeSlots","restructureDates","toTimeString","section","link","uid","paddingTop","weekStartsOn","date","calendars","foregroundColor","backgroundColor","selected","selections","recurring","availableDays","availableHourRange","EventPage","getEventData","justifyContent","checkOrgId","undefined","App","getOrgId","basename","process","split","pop","exact","path","component","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5754c87d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.c4781172.svg\";","\nimport firebase from \"firebase\"\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyABR9I-8WnPTO9f_Kb0wmP32U6ezQcT_rw\",\n  authDomain: \"atlasplanner-e530e.firebaseapp.com\",\n  databaseURL: \"https://atlasplanner-e530e-default-rtdb.firebaseio.com\",\n  projectId: \"atlasplanner-e530e\",\n  storageBucket: \"atlasplanner-e530e.appspot.com\",\n  messagingSenderId: \"466708251492\",\n  appId: \"1:466708251492:web:449bf0c4e036f351fc3071\"\n};\n\nexport const db = firebase.initializeApp(firebaseConfig);","import React from \"react\";\nimport moment from \"moment\"\n\nexport const LiveSiteUtils = {\n\n    getCurrWeek() {\n        var firstday = moment().startOf('week').toDate()\n        var lastday   = moment().endOf('week').toDate();\n    \n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n                \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n\n        return monthNames[firstday.getMonth()] + \" \" + firstday.getDate() + \", \" + firstday.getFullYear() +  \" - \" + monthNames[lastday.getMonth()] + \" \" + lastday.getDate() + \", \" + firstday.getFullYear()  \n    },\n\n    splitSpacesToDashes(name) {\n        var str = name.replace(/\\s+/g, '-').toLowerCase();\n        return str;\n    },\n\n    splitDashestoSpaces(name) {\n        var str = name.replace('-', ' ').split(' ')\n        return str[0];\n    }\n\n}","import axios from 'axios'\n\nexport const atlasAPI = axios.create({ baseURL: 'https://atlasplanner.ue.r.appspot.com' });\n","import Axios from \"axios\";\nimport { atlasAPI } from \"../endpoints\";\n\nexport const EventManager = {\n\n  getAllEvents: async (userToken, orgId) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.get(\n        '/events/' + orgId,\n        config\n      )\n    } catch (error) {\n      console.log(error)\n      return null;\n    }\n  },\n\n  getEvent: async (userToken, orgId, eventId) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.get(\n        '/events/' + orgId + '/' + eventId,\n        config\n      )\n    } catch (error) {\n      console.log(error)\n      return null;\n    }\n  },\n\n  createEvent: async (userToken, orgId, event) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.post(\n        '/events/' + orgId,\n        event,\n        config\n      )\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  },\n\n  deleteEvent: async (userToken, orgId, eventId) => {\n    try {\n      const config = {\n        headers: {\n          \"Authorization\": \"Bearer \" + userToken,\n        },\n      };\n      return await atlasAPI.delete(\n        '/events/' + orgId + '/' + eventId,\n        config\n    )\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n\n}\n","\nimport React from \"react\";\nimport { db } from \"../../firebase\";\nimport { EventManager } from \"./EventManager\";\n\nexport const EventService = {\n\n    getAllEvents: async(orgId) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                EventManager.getAllEvents(userToken, orgId).then((exp) => {\n                    if (exp != null && exp) {\n                        if (exp) {\n                            resolve(exp[\"data\"][\"events\"]);\n                        } else {\n                            resolve(null);\n                        }\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab events.')\n            return null;\n        }\n    },\n\n    createEvent: async(orgId, name) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                EventManager.createEvent(userToken, orgId, name).then((exp) => {\n                    if (exp != null && exp) {\n                        resolve(exp[\"data\"][\"event\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab events.')\n            return null;\n        }\n    },\n\n    deleteEvent: async(orgId, eventId) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                EventManager.deleteEvent(userToken, orgId, eventId).then((exp) => {\n\n                    console.log(exp)\n                    console.log(exp[\"data\"][\"events\"])\n                    if (exp) {\n                        resolve(exp[\"data\"][\"events\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab events.')\n            return null;\n        }\n    },\n\n    getEvent: async(orgId, eventId) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                EventManager.getEvent(userToken, orgId, eventId).then((exp) => {\n                    if (exp != null & exp) {\n                        console.log(exp[\"data\"][\"events\"])\n                        if (exp) {\n                            resolve(exp[\"data\"][\"events\"]);\n                        } else {\n                            resolve(null);\n                        }\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab events.')\n            return null;\n        }\n    },\n\n    async getUserToken() {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = db.auth().onAuthStateChanged(async (user) => {\n                unsubscribe();\n                resolve(user);\n            }, reject);\n        }).then(async (resp) => {\n            if (resp) {\n                return (await resp.getIdTokenResult(true)).token;\n            }\n        });\n    },\n}\n","import Axios from \"axios\";\nimport { atlasAPI } from \"../endpoints\";\n\nexport const OrganizationManager = {\n\n  getAllOrganizations: async (userToken) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.get(\n        '/organizations',\n        config\n      )\n    } catch (error) {\n      console.log(error)\n      return null;\n    }\n  },\n\n  getOrganization: async (userToken, orgId) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.get(\n        '/organizations/' + orgId,\n        config\n      )\n    } catch (error) {\n        return null;\n    }\n  },\n\n  createOrganization: async (userToken, org) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.post(\n        '/organizations',\n        org,\n        config\n      )\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  },\n\n}\n","\nimport React from \"react\";\nimport { db } from \"../../firebase\";\nimport { LiveSiteUtils } from \"../../LiveEvent/utils/LiveSiteUtil\";\nimport { EventService } from \"../events/EventService\";\nimport { OrganizationManager } from \"./OrgManager\";\n\nexport const OrgService = {\n\n    getAllOrganizations: async() => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                OrganizationManager.getAllOrganizations(userToken).then((exp) => {\n                    if (exp != null && exp) {\n                        resolve(exp[\"data\"][\"organizations\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab organizations.')\n            return null;\n        }\n    },\n\n    createOrganization: async(orgId) => {\n        console.log(orgId)\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                OrganizationManager.createOrganization(userToken, orgId).then((exp) => {\n                    if (exp != null && exp) {\n                            resolve(exp[\"data\"][\"organization\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot create organization.')\n            console.log(err)\n            return null;\n        }\n    },\n\n    getOrganization: async(orgId) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                OrganizationManager.getOrganization(userToken, orgId).then((exp) => {\n                    if (exp != null) {\n                        resolve(exp[\"data\"][\"organizations\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab events.')\n            return null;\n        }\n    },\n\n    async getUserToken() {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = db.auth().onAuthStateChanged(async (user) => {\n                unsubscribe();\n                resolve(user);\n            }, reject);\n        }).then(async (resp) => {\n            if (resp) {\n                return (await resp.getIdTokenResult(true)).token;\n            }\n        });\n    },\n}\n","import Axios from \"axios\";\nimport { atlasAPI } from \"../endpoints\";\n\nexport const SessionManager = {\n\n  getAllSessions: async (userToken, orgId, eventId) => {\n    const config = {};\n    try {\n      return await atlasAPI.get(\n        '/sessions/' + orgId  + '/' + eventId,\n        config\n      )\n    } catch (error) {\n      console.log(error)\n      return null;\n    }\n  },\n\n  createSession: async (userToken, orgId, eventId, session) => {\n    const config = {};\n    try {\n      return await atlasAPI.post(\n        '/sessions/' + orgId + '/' + eventId,\n        session,\n        config\n      )\n    } catch (error) {\n        return null;\n    }\n  },\n\n  updateSession: async (userToken, orgId, eventId, sessionId, session) => {\n    const config = {};\n    try {\n      return await atlasAPI.put(\n        '/sessions/' + orgId + '/' + eventId + '/' + sessionId,\n        session,\n        config\n      )\n    } catch (error) {\n        return null;\n    }\n  },\n}\n","\nimport React from \"react\";\nimport { db } from \"../../firebase\";\nimport { EventService } from \"../events/EventService\";\nimport { SessionManager } from \"./SessionManager\";\n\nexport const SessionService = {\n\n    getAllSessions: async(orgId, eventId) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                SessionManager.getAllSessions(userToken, orgId, eventId).then((exp) => {\n                    if (exp != null && exp) {\n                        resolve(exp[\"data\"][\"sessions\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab sessions.')\n            return null;\n        }\n    },\n\n    createSession: async(orgId, eventId, session) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                SessionManager.createSession(userToken, orgId, eventId, session).then((exp) => {\n                    console.log(exp)\n                    if (exp != null && exp) {\n                            resolve(exp[\"data\"][\"sessions\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot create sessions.')\n            console.log(err)\n            return null;\n        }\n    },\n\n    updateSession: async(orgId, eventId, sessionId, session) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                SessionManager.updateSession(userToken, orgId, eventId, sessionId, session).then((exp) => {\n                    if (exp != null && exp) {\n                            resolve(exp[\"data\"][\"sessions\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot create sessions.')\n            console.log(err)\n            return null;\n        }\n    },\n}\n","import React from \"react\";\nimport { EventService } from \"../events/EventService\";\nimport { SessionService } from \"../sessions/SessionService\";\n\n\nconst eventData = {\n    \"name\": 'cs-13xx-office-hours'\n}\n\n\nconst sessionData =  {\n    \"session\": [{\n           \"_orgId\": \"\",\n           \"_eventId\": eventData['name'],\n           \"name\": \"John Smith\",\n           \"descriptions\": \"Located in building Buzz room 103. Best at helping recitation worksheet questions.\",\n           \"link\": \"https://zoom.web/john-smith\",\n           \"section\": \"B1\",\n           \"timeslots\": [\n               {\n                   \"day\": 0,\n                   \"start\": \"09:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"end\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"filled\": {}\n               },\n               {\n                   \"day\": 1,\n                   \"start\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"end\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"filled\": {}\n               },\n               {\n                   \"day\": 2,\n                   \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"filled\": {}\n               }]\n        }, {\n            \"_orgId\": \"\",\n            \"_eventId\": eventData['name'],\n            \"name\": \"Anna Locke\",\n            \"descriptions\": \"Only use zoom and bluejeans. Contact me for regrading questions - regrade can only be done for recent assignments from the last two weeks.\",\n            \"link\": \"https://zoom.web/anna-locke\",\n            \"section\": \"B1\",\n            \"timeslots\": [\n                {\n                    \"day\": 0,\n                    \"start\": \"03:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"end\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"filled\": {}\n                },\n                {\n                    \"day\": 1,\n                    \"start\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"end\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"filled\": {}\n                },\n                {\n                    \"day\": 2,\n                    \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"filled\": {}\n                }]\n            }, {\n                \"_orgId\": \"\",\n                \"_eventId\": eventData['name'],\n                \"name\": \"Jonathan Jones\",\n                \"descriptions\": \"Head TA. Can answer urgent, immediate questions, if needed. Take TA applications for next year run.\",\n                \"link\": \"https://zoom.web/jonathan-jones\",\n                \"section\": \"B1\",\n                \"timeslots\": [\n                    {\n                        \"day\": 0,\n                        \"start\": \"03:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"end\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"filled\": {}\n                    },\n                    {\n                        \"day\": 3,\n                        \"start\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"end\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"filled\": {}\n                    },\n                    {\n                        \"day\": 4,\n                        \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"filled\": {}\n                    }]\n                }, {\n                    \"_orgId\": \"\",\n                    \"_eventId\": eventData['name'],\n                    \"name\": \"Alexa Allison\",\n                    \"descriptions\": \"Recent post-grad student that has TAd for this course. I can answer any of the book questions needed since we have answers for those.\",\n                    \"link\": \"https://zoom.web/alexa-allison\",\n                    \"section\": \"B1\",\n                    \"timeslots\": [\n                        {\n                            \"day\": 0,\n                            \"start\": \"03:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        },\n                        {\n                            \"day\": 1,\n                            \"start\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        },\n                        {\n                            \"day\": 2,\n                            \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        },\n                        {\n                            \"day\": 3,\n                            \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        },  {\n                            \"day\": 4,\n                            \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        }, {\n                            \"day\": 5,\n                            \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        }, {\n                            \"day\": 6,\n                            \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        }\n                    \n                    ]\n                }\n    ]}\n\nexport const Demo = {\n\n    createDemoData: async(orgId) => {\n        await EventService.createEvent(orgId, eventData).then((event) => {\n            if (event) {\n                sessionData['session'].map((session, id) => {\n                    sessionData['session'][id]['_orgId'] = orgId\n                    console.log(session)\n                    SessionService.createSession(orgId, eventData['name'], session)\n                })\n            }\n        })\n    }\n\n}","import React from 'react';\nimport { Card, CardBody } from 'reactstrap'\nimport TextField from '@material-ui/core/TextField';\nimport FadeIn from 'react-fade-in';\nimport { InputAdornment, OutlinedInput } from '@material-ui/core';\nimport MailOutlineRoundedIcon from '@material-ui/icons/MailOutlineRounded';\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport LockIcon from '@material-ui/icons/Lock';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { db } from './firebase';\nimport { OrgService } from './networking/organizations/OrgService';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { Demo } from './networking/demo/Demo';\nimport { LiveSiteUtils } from './LiveEvent/utils/LiveSiteUtil';\n\nclass LoginPage extends React.Component {\n    constructor() {\n        super();\n        this.state={\n            hasAccount: true,\n            email: '',\n            password: '',\n            name: '',\n            orgName: ''\n        }\n    }\n\n    signUp = async(email, password, teamName, name) => {\n        db.auth().createUserWithEmailAndPassword(\n           this.state.email, this.state.password).then((user) => {\n               user.user.updateProfile({\n                   displayName: this.state.name\n               })\n               var orgName = LiveSiteUtils.splitSpacesToDashes(this.state.orgName)\n               const body = {\n                   'name': orgName\n               }\n               OrgService.createOrganization(body).then((org) => {\n                   if (org) {\n                        localStorage.setItem('org_id', orgName)\n                        Demo.createDemoData(orgName).then(() => {\n                            localStorage.setItem('new_user', true)\n                            setTimeout(() => {\n                                return window.location.href = '/events/' + orgName + '/all'\n                            }, 2000)\n                        })\n                   } else {\n                       toast.dark('Name is taken. Try another name.')\n                   }\n               })\n        })\n    }\n\n    login = async(email, password) => {\n        try {\n            return db.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((user) => {\n                    OrgService.getAllOrganizations().then((val) => {\n                        if (val) {\n                            localStorage.setItem('org_id', val[0][\"_id\"])\n                            return window.location.href = '/events/' + val[0][\"_id\"] + '/all'\n                        }\n                    })\n                })\n            } catch (error)  {\n                console.log(error)\n                return alert('Incorrect credentials. Please try again!')\n            }\n    }\n\n    render() {\n\n        return (\n            <div className=\"signInBg\">\n\n               {\n                   this.state.hasAccount ? \n\n                <div>\n                    <Card id=\"card-demo\" className=\"signInCard\">\n                        <CardBody style={{padding: 37 }}>\n                        <FadeIn delay=\"300\">\n                            {/* <img style={{marginBottom: 13}} src={require('../assets/stackstrLogoRocket.svg')} /> */}\n\n                            <p className=\"signInVoyagerTitle\" style={{marginBottom: 10}}> Atlas planner </p>\n                            <InputGroup style={{height: 41, color: 'black'}}>\n                            <InputGroupAddon style={{background: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><MailOutlineRoundedIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ email : text.target.value })} style={{height: 41, color: 'black'}} placeholder=\"Email address\" />\n                        </InputGroup>\n\n                        <InputGroup style={{marginTop: 10, height: 41}}>\n                            <InputGroupAddon style={{background: 'white', borderRight: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><LockIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ password : text.target.value })} type=\"password\" style={{height: 41, color: 'black'}} placeholder=\"Password\" />\n                        </InputGroup>\n                            {/* <p className=\"forgotPassLink\"> Forgot password? </p> */}\n                            <br></br>\n                            <br></br>\n\n                            <button onClick={() => this.login(this.state.email, this.state.password)} id=\"card__image\" className=\"signInBtn\" style={{marginBottom: 11}}> Continue </button> \n\n                            <p onClick={() => this.setState({ hasAccount : false })} className=\"forgotAccountLink\"> Don’t have an account? <span style={{color: '#45484F'}}> Sign up </span> </p>\n                            </FadeIn>\n\n                        </CardBody>\n\n                    </Card>\n                </div>\n                :  \n\n                <div>\n                    <Card id=\"card-demo\" className=\"signInCard\">\n                        <CardBody style={{padding: 37 }}>\n                        <FadeIn delay=\"300\">\n                            {/* <img style={{marginBottom: 13}} src={require('../assets/stackstrLogoRocket.svg')} /> */}\n\n                            <p className=\"signInVoyagerTitle\" style={{marginBottom: 10, width: 140}}> New user sign up. </p>\n                            <InputGroup style={{height: 41, color: 'black'}}>\n                            <InputGroupAddon style={{background: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><MailOutlineRoundedIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ email : text.target.value })} style={{height: 41, color: 'black'}} placeholder=\"Email address\" />\n                        </InputGroup>\n\n                        <InputGroup style={{marginTop: 10, height: 41}}>\n                            <InputGroupAddon style={{background: 'white', borderRight: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><LockIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ password : text.target.value })} type=\"password\" style={{height: 41, color: 'black'}} placeholder=\"Password\" />\n                        </InputGroup>\n                            {/* <p className=\"forgotPassLink\"> Forgot password? </p> */}\n                            <InputGroup style={{marginTop: 10, height: 41}}>\n                            <InputGroupAddon style={{background: 'white', borderRight: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><PersonIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ name : text.target.value })} type=\"Full name\" style={{height: 41, color: 'black'}} placeholder=\"Full name\" />\n                        </InputGroup>\n\n                        <InputGroup style={{marginTop: 10, height: 41}}>\n                            <InputGroupAddon style={{background: 'white', borderRight: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><PersonIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ orgName : text.target.value })} type=\"Team name\" style={{height: 41, color: 'black'}} placeholder=\"Organization name\" />\n                        </InputGroup>\n                            <br></br>\n\n                            <button onClick={() => this.signUp(this.state.email, this.state.password, this.state.orgName, this.state.name)} id=\"card__image\" className=\"signInBtn\" style={{marginBottom: 11}}> Continue </button> \n\n                            <p onClick={() => this.setState({ hasAccount : true })} className=\"forgotAccountLink\"> Have an account? <span style={{color: '#45484F'}}> Sign in </span> </p>\n                            </FadeIn>\n\n                        </CardBody>\n\n                    </Card>\n                </div>\n\n               }\n\n\n               <ToastContainer />\n\n            </div>\n        )\n    }\n}\n\nexport default LoginPage;","import React, { useState } from \"react\"\nimport { Dropdown, Icon } from \"semantic-ui-react\"\nimport { db } from \"../pages/firebase\"\n\nconst getUsername = () => {\n    return db.auth().currentUser.displayName\n};\n\nexport const UserBanner = ({teamId, ...restProps}) => {\n    const [username, setUsername] = useState(getUsername)\n\n    const logOut = () => {\n        return db.auth().signOut().then(() => {\n            localStorage.clear()\n            return window.location.href = '/login'\n        })\n    };\n\n    return (\n        <Dropdown id=\"user_settings\" className=\"userProfileDropdownBtn\" icon={null} \n            style={{marginLeft: 16}} text={ <div>\n                <Icon style={{color: 'white'}} name=\"user\" /> <span style={{marginLeft: '10'}} className=\"usernameText\"> {username} </span></div> }>\n            <Dropdown.Menu style={{width: '100%'}} >\n                <Dropdown.Item style={{textAlign: 'center'}} onClick={logOut} text='Logout'  />\n            </Dropdown.Menu>\n        </Dropdown>\n    )\n}","import React, { Component } from \"react\";\n\n\nexport class LoadingPage extends Component {\n    render() {\n        return (\n            <div style={{height: '100vh'}}>\n                <div style={{height: '100%'}} class=\"ui inverted segment\">\n                <div class=\"ui active inverted text loader\"> Loading page </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nexport class PageNotFound extends Component {\n    render() {\n        return (\n            <div style={{height: '100vh'}}>\n                <div class=\"ui grid middle aligned segment black inverted\" style={{height: '100%', margin: '0 auto'}}>\n                <div class=\"ui column center aligned\">\n                    <div class=\"ui inverted statistic\">\n                    <div class=\"value\">404</div>\n                    <div style={{marginTop: 10,}} class=\"label\">Page not found</div>\n                    <br></br>\n                    <Button onClick={() => window.location.href = '/'}> Go back </Button>\n                    </div>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}","import { Card } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { Input } from 'semantic-ui-react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label,  CardBody, Row, Col, DropdownMenu } from 'reactstrap';\nimport { db } from '../../firebase';\nimport { updateLocale } from 'moment';\nimport 'semantic-ui-css/semantic.min.css'\nimport { EventService } from '../../networking/events/EventService';\nimport { toast } from 'react-toastify';\nimport { LiveSiteUtils } from '../../LiveEvent/utils/LiveSiteUtil';\n\nexport const AddEventModal = (props) => {\n  const {\n    orgId,\n    className,\n    updateEvents,\n    children,\n  } = props;\n\n  const [modal, setModal] = useState(false);\n  const [projectName, setName] = useState(\"\");\n\n  const toggle = () => setModal(!modal);\n\n  const createEvent = async(name) => {\n    var name = projectName\n    name = LiveSiteUtils.splitSpacesToDashes(name)\n    const body = {\n      'name': name\n    }\n    EventService.createEvent(orgId, body).then((resp) => {\n      if (resp) {\n        toggle()\n        updateEvents(orgId)\n      } else {\n          toast.dark('Event name is taken.');\n      }\n    })\n  }\n\n  return (\n    <div onClick={toggle}>\n        {children}\n      <Modal style={{padding: 20}} overlay={false} isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader cssModule={{'modal-title': 'w-100 text-center'}} style={{borderBottom: 'none', paddingBottom: '0px', padding: 10, fontWeight: 600, fontSize: '17px', textAlign: 'center'}} className=\"createProjectTitle\" toggle={toggle}> <span style={{borderBottom: 'none', paddingBottom: '0px', fontWeight: 600, fontSize: '17px', textAlign: 'center'}}> create an event </span></ModalHeader>\n        <ModalBody>\n        <Label style={{marginBottom: 9}} className=\"createProjectLabel\"> create event </Label>\n        <br></br>\n        <Input style={{width: '100%', border: '1px solid black', borderRadius: '5px'}} onChange={(text) => setName(text.target.value)} placeholder=\"Enter event name\" />\n        <br></br>\n        </ModalBody>\n        <ModalFooter style={{borderTop: 'none'}}>\n          <Button style={{border: 'none', boxShadow: '0px 4px 14px rgba(58, 116, 148, 0.23)'}} className=\"createEventBtn\" onClick={() => createEvent(projectName)} color=\"primary\"> + Create </Button>{' '}\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\n\n\n","import { locale } from 'moment';\nimport React, { useEffect } from 'react'\nimport { Button, Header, Icon, Modal, Dropdown } from 'semantic-ui-react'\n\nconst ExitDemoModal = ({opened, ...restProps}) => {\n  const [open, setOpen] = React.useState(opened)\n\n  useEffect(() => {\n\n    if (open != opened) {\n        setOpen(opened)\n    }\n\n  }, [opened])\n\n  const exitTutorial = () => {\n      localStorage.setItem('new_user', false)\n  };\n\n  return (\n      <Modal\n          basic\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          open={open}\n          size='small'>\n          <Header icon>\n            <Icon name=\"delete\" />\n            End tutorial\n          </Header>\n          <Modal.Content>\n          <p style={{textAlign: 'center'}}>\n            Looks like you're trying to exit this tutorial. If you make this action, you cannot undo it. \n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color='white' inverted onClick={() => setOpen(false)}>\n            <Icon name=\"cancel\"  /> No\n          </Button>\n          <Button onClick={exitTutorial} inverted color='red'>\n            <Icon name='trash' /> Yes\n          </Button>\n        </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default ExitDemoModal\n","import { Card } from \"@material-ui/core\";\nimport React from \"react\"\nimport FadeIn from \"react-fade-in\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Button, CardBody, Col, Row } from \"reactstrap\";\nimport { UserBanner } from \"../../globalcomp/UserDropDown\";\nimport { db } from \"../firebase\";\nimport { LoadingPage } from \"../LoadingPage\";\nimport { EventService } from \"../networking/events/EventService\";\nimport { OrgService } from \"../networking/organizations/OrgService\";\nimport { PageNotFound } from \"../PageNotFound\";\nimport { AddEventModal } from \"./components/AddEventModal\";\nimport 'intro.js/introjs.css'\nimport introJs from 'intro.js'\nimport ExitDemoModal from \"../../globalcomp/ExitDemoModal\";\n\n\nclass AllEventsPage extends React.Component {\n    constructor() {\n        super();\n        this.orgId = \"\"\n        this.org = []\n        this.state={\n            events: [],\n            isLoading: true,\n            pageNotFound: false,\n            exitTutorial: false\n        }\n    }\n\n    getOrganization = async(orgId) => {\n        await OrgService.getOrganization(orgId).then((org) => {\n            if (org != null && org) {\n                this.org = org;\n            } else {\n                this.pageNotFound();\n            }\n        })\n    };\n\n    getEvents = async(orgId) => {\n        await EventService.getAllEvents(orgId).then((events) => {\n            if (events != null && events) {\n                this.setState({ events : events })\n            } \n        })\n        this.isLoading();\n    };\n\n    isLoading() {\n        this.setState({ isLoading : false })\n    };\n\n    pageNotFound() {\n        this.setState({ pageNotFound : true })\n    };\n\n    exitTutorial = () => {\n        console.log('made it ')\n        this.setState({ exitTutorial : true })\n    }\n\n    startTutorial = async() => {\n        return setTimeout(() => {\n            return introJs().setOptions({\n                skipLabel: \"\",\n                highlightClass: true,\n                exitOnOverlayClick: false,\n                showProgress: true,\n                steps: [{\n                    title: 'Welcome! 👋',\n                    intro: `Look's like you are new around here! Let's show you around before you officially set up your first event.`\n                }, {\n                    title: 'Your Events',\n                  element: document.getElementById('eventbody'),\n                  intro: \"Your events will be located here - we have provided a sample event for you to later explore around for this tutorial.\" \n                }, {\n                    title: 'Live Links',\n                  element: document.getElementById('live_link'),\n                  intro: \"Each event has a public unique link that is named after your organization & event name.\"\n                },  {\n                    title: 'Create Event',\n                  element: document.getElementById('create_event'),\n                  intro: \"You can create new events by clicking on the button and entering a name.\"\n                },\n                {\n                    title: `Click here!`,\n                    element: document.getElementById('demo_project'),\n                  intro: \"Click on the sample project. See you there! 👋\"\n                }\n            ]\n              }).start().onexit(() => {\n                    this.exitTutorial()\n              });\n        }, 1300)\n    }\n\n  componentDidMount() {\n        this.orgId = this.props.match.params.orgId\n        if (this.props.orgId) {\n            this.props.match.params.orgId = this.props.orgId\n            this.orgId = this.props.orgId\n        }\n        this.getOrganization(this.props.match.params.orgId).then(() => {\n            this.getEvents(this.props.match.params.orgId);\n        });\n        if (localStorage.getItem('new_user') == \"true\") {\n            this.startTutorial()\n        }\n    }\n    \n    render() {\n        if (this.state.pageNotFound) {\n            return <PageNotFound />\n        }\n\n        if (this.state.isLoading) {\n            return <LoadingPage />\n        }\n\n        return (\n            <div className=\"eventBody\">\n                <div className=\"eventHeader\">\n                    <div className=\"container\" >\n                        <img style={{marginTop: 20}} src={require('../../assets/icon.svg')} />\n\n                        <p style={{marginTop: 23}} className=\"userProfile float-right\"> <UserBanner /></p>\n                    </div>\n                </div>\n                    <div className=\"eventWhiteHeader\">\n                        <div className=\"container\" style={{marginTop: 50}}>\n                            <span> <span className=\"eventWhiteHeaderTitle\">My events</span>\n                            <Button id=\"create_event\" className=\"float-right createEventBtn \"> <AddEventModal updateEvents={this.getEvents} orgId={this.props.match.params.orgId}> + Create </AddEventModal> </Button>\n\n                            </span>\n                        </div>\n    \n                    </div>                  \n\n                  <div  className=\"eventPageBody container\">\n                      <Row id=\"eventbody\">\n                    {\n                        this.state.events.map((event) => {\n                            if (event[\"name\"] == \"cs-13xx-office-hours\") {\n                                return (\n                                    <Col style={{marginBottom: 30}} sm={4}>\n                                    <FadeIn delay=\"400\">\n                                    <Card id=\"demo_project\" onClick={() => window.location.href = '/c/' + this.orgId + '/' + event[\"name\"]} style={{cursor: 'pointer'}}  className=\"eventProjectCard\">\n                                        <div  className=\"eventProjectGradCard\"></div>\n                                        <CardBody >\n                                            <p className=\"eventProjectTitle\"> {event[\"name\"]} </p>\n                                        </CardBody>\n                                        <div style={{padding: 5}}>\n\n                                        <Button id=\"live_link\" style={{marginRight: 10, marginBottom: 20}} onClick={() => window.location.href = '/c/' + this.orgId + '/' + event[\"name\"]} className=\"float-right getLink\"> Link </Button>\n                                        </div>\n                                    </Card>\n                                    </FadeIn>\n                                </Col>\n                                )\n                            }\n                            return (\n                                <Col style={{marginBottom: 30}} sm={4}>\n                                    <FadeIn delay=\"400\">\n                                    <Card onClick={() => window.location.href = '/c/' + this.orgId + '/' + event[\"name\"]} style={{cursor: 'pointer'}}  className=\"eventProjectCard\">\n                                        <div  className=\"eventProjectGradCard\"></div>\n                                        <CardBody >\n                                            <p className=\"eventProjectTitle\"> {event[\"name\"]} </p>\n                                        </CardBody>\n                                        <div style={{padding: 5}}>\n\n                                        <Button onClick={() => window.location.href = '/c/' + this.orgId + '/' + event[\"name\"]} style={{marginRight: 10, marginBottom: 20}} className=\"float-right getLink\"> Link </Button>\n                                        </div>\n                                    </Card>\n                                    </FadeIn>\n                                </Col>\n                            )\n                        })\n                    }\n                    </Row>\n                </div>\n    \n                <ExitDemoModal opened={this.state.exitTutorial} />\n\n                <ToastContainer />\n\n            </div>\n\n        )\n    }\n}\n\nexport default AllEventsPage;","import React from 'react'\nimport { Button, Header, Icon, Modal, Dropdown } from 'semantic-ui-react'\n\nconst DeletePersonModal = ({orgId, sessionId,...restProps}) => {\n  const [open, setOpen] = React.useState(false)\n\n  const deleteProject = () => {\n\n  };\n\n  return (\n      <Modal\n          basic\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          open={open}\n          size='small'\n          trigger={<Icon className=\"float-right\" name=\"delete\" />}>\n          <Header icon>\n            <Icon name=\"user delete\" />\n            Delete a person\n          </Header>\n          <Modal.Content>\n          <p style={{textAlign: 'center'}}>\n            Looks like you're trying to remove this person. If you make this action, you cannot undo it. \n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color='white' inverted onClick={() => setOpen(false)}>\n            <Icon name=\"cancel\"  /> No\n          </Button>\n          <Button onClick={deleteProject} inverted color='red'>\n            <Icon name='trash' /> Yes\n          </Button>\n        </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default DeletePersonModal\n","import React, { useEffect } from \"react\"\nimport { Card, TextField } from '@material-ui/core';\nimport { useState } from 'react';\nimport { Accordion, Form, Icon, Input, TextArea } from 'semantic-ui-react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label,  CardBody, Row, Col, DropdownMenu, Table } from 'reactstrap';\nimport { db } from \"../../firebase\";\nimport { Slide, toast } from \"react-toastify\";\nimport { SessionService } from \"../../networking/sessions/SessionService\";\nimport uuid from 'react-uuid'\nimport DeletePersonModal from \"./DeleteMentorModal\";\n\nexport const ReserveMentor = (props) => {\n    const {\n      orgId,\n      eventId,\n      currWeek,\n      timeslot,\n      mentor,\n      updateMentor,\n      updateCurrMentor,\n      children,\n    } = props;\n  \n    const [modal, setModal] = useState(false);\n    const [timeslott, setSlot] = useState(timeslot);\n    const [projectName, setName] = useState(\"\");\n    const [idx, setIdx] = useState(0);\n    const [description, setDesc] = useState(\"\");\n  \n    const toggle = () => setModal(!modal);\n\n    useEffect(() => {\n\n            setSlot(timeslot)\n\n    }, [timeslot])\n\n    const handleClick = (i) => {\n      console.log(idx)  \n      setIdx(i)\n    }\n\n    const reserveMentor = async(name) => {\n\n        if (projectName == \"\") {\n            return toast.dark('Please enter a name', {transition: Slide})\n        }\n\n        if (!mentor[\"data\"][\"timeslots\"][timeslot[\"id\"]][\"filled\"][currWeek]) {\n          mentor[\"data\"][\"timeslots\"][timeslot[\"id\"]][\"filled\"][currWeek] = {}\n        }\n\n        const id = uuid();\n\n        mentor[\"data\"][\"timeslots\"][timeslot[\"id\"]][\"filled\"][currWeek][id] = {\"name\": projectName, \"description\": description}\n\n        const body = { \"session\" : mentor[\"data\"]}\n\n        SessionService.updateSession(orgId, eventId, mentor[\"data\"][\"_id\"], body).then((sessions) => {\n          console.log(sessions)\n            if (sessions) {\n                toast.dark('Successfully added to session', {transition: Slide})\n\n                updateMentor()\n                updateCurrMentor(mentor[\"id\"])\n                toggle()\n            }\n        })\n    }\n    return (\n      <div onClick={toggle}>\n          {children}\n        <Modal style={{padding: 20}} overlay={false} isOpen={modal} toggle={toggle} >\n          <ModalHeader cssModule={{'modal-title': 'w-100 text-center'}} style={{borderBottom: 'none', paddingBottom: '0px', padding: 10, fontWeight: 600, fontSize: '17px', textAlign: 'center'}} className=\"createProjectTitle\" toggle={toggle}> <span style={{borderBottom: 'none', paddingBottom: '0px', fontWeight: 600, fontSize: '17px', textAlign: 'center'}}> Reserve Session </span></ModalHeader>\n          <ModalBody>\n          <Label style={{marginBottom: 9}} className=\"createProjectLabel\"> Your Name </Label>\n          <br></br>\n          <Input style={{width: '100%'}} onChange={(text) => setName(text.target.value)} placeholder=\"Enter name\" />\n          <br></br>\n          <br></br>\n          <Label style={{marginBottom: 9}} className=\"createProjectLabel\"> Extra Info </Label>\n          <br></br>\n          <Form>\n          <TextArea style={{width: '100%'}} onChange={(text) => setDesc(text.target.value)} placeholder=\"What are we talking about? (optional)\" />\n          </Form>\n          <br></br>\n          <br></br>\n          <p> Participants </p>\n          <Accordion styled>\n           \n          {\n              Object.keys(timeslot[\"filled\"]).map((time, i) => {\n                  if (time == currWeek) {\n                    return Object.keys(timeslot[\"filled\"][time]).map((person, j) => {\n                        return <span>\n                        <Accordion.Title\n                            active={j === idx}\n                            index={j}\n                            onClick={() => handleClick(j)}\n                          >\n                          \n                                <Icon name=\"user\" style={{marginRight: 15}} />\n                                {timeslot[\"filled\"][time][person][\"name\"]}\n                               <DeletePersonModal orgId={orgId} /> \n                          </Accordion.Title>\n                          <Accordion.Content active={j === idx}>\n                            <p>\n                            {timeslot[\"filled\"][time][person][\"description\"]}\n                            </p>\n                          </Accordion.Content>\n                      </span>\n                           \n                    })\n                  }\n              })\n          }\n\n          </Accordion>\n           \n          </ModalBody>\n          <ModalFooter style={{borderTop: 'none'}}>\n            <Button className=\"createEventBtn\" onClick={() => reserveMentor(projectName)} color=\"primary\"> Submit </Button>{' '}\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n  ","import React, { Component } from \"react\"\nimport { LiveSiteUtils } from \"../utils/LiveSiteUtil\"\nimport { Card, CardBody, Col, Row } from \"reactstrap\";\nimport FadeIn from \"react-fade-in\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ReserveMentor } from \"../components/ReserveMentor\";\nimport moment from \"moment\"\n\n\nexport class Mentors extends Component {\n    state = {\n        orgId: this.props.orgId,\n        eventId: this.props.eventId,\n        mentors: this.props.mentors,\n        currentMentor: []\n    }\n\n    currWeek = LiveSiteUtils.getCurrWeek() \n\n    selectMentor = (mentorId) => {\n        this.setState({ currentMentor : {\"id\": mentorId, \"data\": this.state.mentors[mentorId] }})\n    };\n\n    componentDidUpdate() {\n        if (this.props.mentors != this.state.mentors) {\n            this.setState({ mentors : this.props.mentors })\n            this.setState({ currentMentor : {\"id\": this.state.currentMentor[\"id\"], \"data\": this.props.mentors[this.state.currentMentor['id']] }})\n        }\n    }\n\n    render() {\n        var weekDayData = {\n            'sunday': [], \"monday\": [], \"tuesday\": [], \"wednesday\": [], \"thursday\": [], \"friday\": [], 'saturday': [], \n        }\n\n        console.log()\n        \n        return (\n            <div>\n              \n              <p className=\"eventSubTabs\"> {this.currWeek} </p>\n\n            {\n    this.state.currentMentor.length != 0 ?\n    <div id=\"calendar_body\">\n    <Card >\n        <CardBody>\n        <strong> {this.state.currentMentor[\"data\"][\"name\"] + `'s Schedule`} </strong> \n        <p style={{textDecoration: 'underline'}}> {this.state.currentMentor[\"data\"][\"link\"]} </p> \n        <Row>\n        {\n            Object.keys(weekDayData).map((day, idx) => {\n               const times = []\n                \n               this.state.currentMentor[\"data\"][\"timeslots\"].map((time, id) => { \n                   time = {\"id\": id, ...time}\n                   if (time[\"day\"] == idx) { \n                       return times.push(time) \n                    }\n                })\n\n                return (\n                    <Col style={{marginTop: 10}} sm={3}>\n                    <Card className=\"eventProjectCard\">\n                        <CardBody>\n                   \n                        <p className=\"dayOfWeek\"> {day} </p>\n                        <br></br>\n                        <p> {\n                                times.sort(function compare(a, b) {\n                                    return new Date('1970/01/01 ' + a[\"start\"]) - new Date('1970/01/01 ' + b[\"start\"]);\n                                  }).map((time) => {\n                                    if (time) {\n                                        if (time[\"filled\"] != 0) {\n                                            if (Object.keys(time[\"filled\"]).includes(this.currWeek)) {\n                                                return (\n                                                    <div className=\"unavailableTime\" style={{background: '#3430F6', textAlign: 'center', marginBottom: 5}}>\n                                                       <ReserveMentor updateCurrMentor={this.selectMentor} updateMentor={this.props.updateMentor} timeslot={time} currWeek={this.currWeek} mentor={this.state.currentMentor} orgId={this.state.orgId} eventId={this.state.eventId}> <span> {moment(time[\"start\"], 'HH:mm'). format('h:mm A')} - {moment(time[\"end\"], 'HH:mm'). format('h:mm A')}</span> </ReserveMentor>\n                                                    </div>\n                                                )\n                                            }\n                                        }\n\n                                        return (\n                                            <div className=\"availableTime\"   style={{background: 'none', marginBottom: 5, textAlign: 'center', border: '1px solid black'}}>\n                                               <ReserveMentor updateCurrMentor={this.selectMentor} updateMentor={this.props.updateMentor} timeslot={time} currWeek={this.currWeek} mentor={this.state.currentMentor} orgId={this.state.orgId} eventId={this.state.eventId}> <span style={{color: 'black'}}> {moment(time[\"start\"], 'HH:mm'). format('h:mm A')} - {moment(time[\"end\"], 'HH:mm'). format('h:mm A')}</span> </ReserveMentor>\n                                            </div>\n                                        )\n                                    }\n                                })\n                            } </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                )\n            })\n        }\n        </Row>\n\n        </CardBody>\n        </Card>\n        <br></br>\n    </div>\n    :\n    null\n}\n\n            <Row id=\"sessions_body\">\n                {\n                    this.state.mentors != \"None\"?\n\n                        Object.keys(this.state.mentors).map((mentor) => {\n                            console.log(this.state.mentors[mentor]['name'])\n                            return (\n                            <Col style={{marginBottom: 30}} sm={4}>\n                                \n                                <FadeIn delay=\"400\">\n                                <Card id={this.state.mentors[mentor]['name']} onClick={() => this.selectMentor(mentor)} style={{cursor: 'pointer'}}  className=\"eventProjectCard\">\n                                <div className=\"eventProjectGradCard\"></div>\n                                <CardBody>\n                                <p style={{marginBottom: 0}} className=\"eventProjectTitle\"> {this.state.mentors[mentor][\"name\"]} </p>\n                                <p style={{textDecoration: 'underline', opacity: 0.4, fontSize: '13px'}}> {this.state.mentors[mentor][\"link\"]} </p>\n                                <p > {this.state.mentors[mentor][\"descriptions\"]} </p>\n                                </CardBody>\n                                </Card>\n                                </FadeIn>\n                            </Col>\n                            )\n                        })\n\n            : null }\n            </Row>\n\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { LiveSiteUtils } from \"../utils/LiveSiteUtil\";\nimport moment from \"moment\"\nimport { Col, Row } from \"reactstrap\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport CsvDownloader from 'react-csv-downloader';\n\nexport class TodaySession extends Component {\n    state = {\n        orgId: this.props.orgId,\n        eventId: this.props.eventId,\n        mentors: this.props.mentors,\n    }\n\n    currWeek = LiveSiteUtils.getCurrWeek()\n    todayDate = new Date()\n\n    componentDidUpdate() {\n        if (this.props.mentors != this.state.mentors) {\n            this.setState({ mentors : this.props.mentors })\n        };\n    };\n\n    render() {\n        if (this.state.mentors == \"None\") {\n            return \"no mentors yet\"\n        }\n\n        const columns = [{field: \"section\", sorted: true, resizable: true, editable: true, resizable: true, headerName: \"Section\", width: 120}, {field: \"name\",  resizable: true, editable: true, headerName: \"Name\", width: 120}, {field: \"link\", resizable: true,  editable: true, headerName: \"Link\", width: 120}, {field: \"descriptions\", editable: true, resizable: true, headerName: \"Other\", width: 120},]\n\n        const times = []\n\n        const availTodaySess = []\n\n        Object.keys(this.state.mentors).map((mentor) => {\n            var isAvailable = false\n            this.state.mentors[mentor][\"timeslots\"].map((time) => {\n                if (time[\"day\"] == this.todayDate.getDay()) {\n                    isAvailable = true\n                }\n            })\n            if (isAvailable) {\n                availTodaySess.push(this.state.mentors[mentor])\n            }\n        })\n\n        Object.keys(availTodaySess).map((mentor) => {\n            availTodaySess[mentor][\"timeslots\"].map(time => {\n                console.log(time)\n                if (time[\"day\"] == this.todayDate.getDay()) {\n                    if (!times.includes(time[\"start\"] + \"-\" + time[\"end\"])) {\n                        times.push(time[\"start\"] + \"-\" + time[\"end\"])\n\n                        columns.push({field: time[\"start\"] + \" - \" + time[\"end\"], editable: true, start: time[\"start\"], end: time[\"end\"], headerName: moment(time[\"start\"], 'HH:mm'). format('h:mm A') + \" - \" + moment(time[\"end\"], 'HH:mm'). format('h:mm A'), width: 190 })\n\n                        columns.sort(function compare(a, b) {\n                            return new Date('1970/01/01 ' + a[\"start\"]) - new Date('1970/01/01 ' + b[\"start\"]);\n                          })\n                    }\n                }\n            })\n        })\n\n        const rows = []\n\n        Object.keys(availTodaySess).map((mentor, idx) => {\n            var mentorInfo = {\n                \"id\": idx, \n                \"section\": availTodaySess[mentor][\"section\"], \n                \"name\": availTodaySess[mentor][\"name\"], \n                \"descriptions\": availTodaySess[mentor][\"descriptions\"], \n                \"link\": availTodaySess[mentor][\"link\"]\n            }\n\n            availTodaySess[mentor][\"timeslots\"].map((time) => {\n                if (time[\"day\"] == this.todayDate.getDay()) {\n                    var getMemberInfo = \"\"\n                    Object.keys(time[\"filled\"]).map((week) => {\n                        if (week == this.currWeek) {\n                            console.log(time[\"filled\"])\n                            Object.keys(time[\"filled\"][week]).map((people) => {\n                                getMemberInfo += time[\"filled\"][week][people][\"name\"] + \", \"\n                            })\n                        }\n                \n\n                    })\n\n                    mentorInfo[time[\"start\"] + \" - \" + time[\"end\"]] = getMemberInfo\n                }\n            })\n\n            rows.push(mentorInfo)\n            rows.sort(function compare(a, b) {\n                return a[\"section\"] -  b[\"section\"];\n              })\n            \n        })\n\n        return (\n            <div>\n\n                <p className=\"dayOfWeek\"> {`Today's Sessions`}</p>\n                <br></br>\n                <div id=\"today-session-body\" style={{ height: '500px', background: 'white', width: '100%'}}>\n                <DataGrid filterMode={false} sortModel={false}  rows={rows} columns={columns} />\n                </div>\n             \n            </div>\n        )\n    }\n}","import React from \"react\"\nimport { Mentors } from \"./Mentors\"\nimport { TodaySession } from \"./TodaySession\"\n\n\nexport const TabManager = {\n\n    getTabComp: (name, orgId, eventId, mentors,  updateMentors) => {\n        switch (name) {\n\n            case \"mentors\":\n                return <Mentors orgId={orgId} eventId={eventId} mentors={mentors} updateMentor={updateMentors} />\n\n            case \"today-session\":\n                return <TodaySession orgId={orgId} eventId={eventId} mentors={mentors} />\n        }\n    },\n\n    getTabNames: () =>{\n        return [{\n            'name': 'all sessions',\n            'route': 'mentors'\n        },{\n            'name': 'today session',\n            'route': 'today-session'\n        }]\n    }\n\n}","import React from \"react\"\nimport { db } from \"../firebase\"\nimport { ToastContainer } from \"react-toastify\";\nimport { TabManager } from \"./subtabs/SubTabManager\";\nimport { SessionService } from \"../networking/sessions/SessionService\";\nimport { LoadingPage } from \"../LoadingPage\";\nimport { PageNotFound } from \"../PageNotFound\";\nimport { LiveSiteUtils } from \"./utils/LiveSiteUtil\";\nimport 'intro.js/introjs.css'\nimport introJs from 'intro.js'\n\nclass LiveEventPage extends React.Component {\n    constructor() {\n        super()\n        this.orgId = \"\"\n        this.eventId = \"\"\n        this.currWeek = \"\"\n        this.state={\n            mentors: [],\n            tab: \"sessions\",\n            pageComponent: [],\n            isLoading: true,\n            pageNotFound: false\n        }\n    }\n\n    getMentorData = async() => {\n        return SessionService.getAllSessions(this.props.match.params.orgId, this.props.match.params.eventId).then((sessions) => {\n            if (sessions != null) {\n                this.eventId = this.props.match.params.eventId\n                this.setState({ mentors : sessions })\n                this.updateTabData('mentors')\n            } else {\n                this.pageNotFound();\n            }\n            this.isLoading();\n        })\n    };\n\n    updateTabData = (tabName) => {\n        this.setState({ tab : tabName })\n        this.setState({ pageComponent : TabManager.getTabComp(tabName, this.props.match.params.orgId, this.props.match.params.eventId, this.state.mentors, this.getMentorData) })\n    };\n\n    pageNotFound() {\n        this.setState({ pageNotFound : true })\n    };\n\n    isLoading() {\n        this.setState({ isLoading : false })\n    };\n\n    startTutorial = () => {\n        setTimeout(() => {\n            var introStep = 0\n            introJs().setOptions({\n                skipLabel: \"\",\n                highlightClass: true,\n                exitOnOverlayClick: false,\n                showProgress: true,\n                steps: [{\n                    title: 'Welcome back! 👋',\n                    intro: `Now let's explore the event.`\n                }, {\n                    title: 'Sessions',\n                  element: document.getElementById('sessions_body'),\n                  intro: \"Sessions will be in events. Sessions can be created by anyone, and it can represent a TA, group event, mentor, etc.\"\n                }, {\n                    title: 'Calendar',\n                  element: document.getElementById('calendar_body'),\n                  intro: \"View the session`s available times for this week, and reserve any of the time slots.\"\n                },  {\n                    title: `Today's Sessions`,\n                  element: document.getElementById('today-session-body'),\n                  intro: \"You can create new events by clicking on the button and entering a name.\"\n                }, {\n                    title: `Create Sessions`,\n                  element: document.getElementById('create-new-session'),\n                  intro: \"You can create new sessions by clicking on this link. This will open a new window for you to fill out details.\"\n                },\n                {\n                    title: `That's it!`,\n                  intro: \"Click on the sample project. See you there! 👋\"\n                }\n            ]\n              }).start().onafterchange(() => {\n                  introStep += 1;\n                  if (introStep == 2) {\n                      setTimeout(() => {\n                        document.getElementById('Anna Locke').click()\n                      }, 1000)\n                  }\n                  if (introStep == 3) {\n                      this.updateTabData('today-session')\n                  }\n              }).oncomplete(() => {\n                  localStorage.setItem('new_user', false)\n              })\n                  \n        }, 1300)\n    }\n\n    componentDidMount() {\n        this.getMentorData().then(() => {\n            if (localStorage.getItem('new_user') == \"true\" && this.eventId == \"cs-13xx-office-hours\") {\n                this.startTutorial()\n                console.log(this.eventId)\n            }\n            console.log(this.eventId)\n        })\n    }\n    \n    render() {\n        if (this.state.pageNotFound) {\n            return <PageNotFound />\n        }\n\n        if (this.state.isLoading) {\n            return <LoadingPage />\n        }\n\n        return (\n            <div className=\"eventBody\">\n                <div className=\"eventHeader\">\n                    <div className=\"container\">\n                        <row>\n                        <img style={{marginTop: 20, marginRight: 30}} src={require('../../assets/icon.svg')} />\n                            <a onClick={() => window.location.href = '/'} style={{color: 'white', position: 'absolute', top: '22px', cursor: 'pointer'}}> My Events </a>\n                        </row>\n                    </div>\n                        </div>      \n                            <div className=\"eventWhiteHeader\">\n                                <div className=\"container\">\n                                    <p className=\"eventWhiteHeaderTitle\" style={{marginBottom: 5, marginTop: 25}}>{this.props.match.params.eventId}</p>\n\n                                    <p onClick={() => window.open(\"/c/\" + this.props.match.params.orgId + \"/\" + this.props.match.params.eventId)} className=\"liveLinkHeader\">{window.location.origin.toString() + \"/c/\" + this.props.match.params.orgId + \"/\" + this.props.match.params.eventId}</p>\n\n                                <row style={{position: 'absolute', display: 'block', bottom: '10px'}}>\n                                    {\n                                        TabManager.getTabNames().map((tab) => {\n                                            return (\n                                                <a className={tab[\"route\"] == this.state.tab ? \"nestedTabHover nestedTab\": \"nestedTab\" } onClick={() => this.updateTabData(tab[\"route\"])} style={{cursor: 'pointer', marginRight: 16}} > {tab[\"name\"]} </a>\n                                            )\n                                        })\n                                    }\n                                    <a id=\"create-new-session\" style={{cursor: 'pointer'}} onClick={() =>  window.open('/createsession/' + this.props.match.params.orgId + '/' + this.props.match.params.eventId)}> create a session</a>\n                                </row>\n\n                            </div>\n                        </div>\n                  \n                <div className=\"eventPageBody container\">\n\n                    {this.state.pageComponent}\n\n                </div>\n                <ToastContainer/>\n\n            </div>\n        )\n    }\n}\n\nexport default LiveEventPage;","import React from \"react\"\nimport AvailableTimes from 'react-available-times';\nimport { Slide, toast, ToastContainer } from \"react-toastify\";\nimport { Button, Col, Row } from \"reactstrap\";\nimport { Form, Input, TextArea } from \"semantic-ui-react\";\nimport { db } from \"../firebase\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ReactFormBuilder } from 'react-form-builder2';\nimport 'react-form-builder2/dist/app.css';\nimport { SessionService } from \"../networking/sessions/SessionService\";\n\nclass MentorForm extends React.Component {\n    constructor() {\n        super()\n        this.orgId = \"\"\n        this.eventId = \"\"\n        this.uid= \"\"\n        this.state={\n            name: \"\",\n            link: \"\",\n            section: \"\",\n            description: \"\",\n            timeSlots: [],\n        }\n    }\n\n    submitMentor = async() => {\n\n        if (this.state.name == \"\") {\n            return toast.dark('Please enter your name',{ transition : Slide  })\n        }\n        if (this.state.timeSlots) {\n            if (this.state.timeSlots.length == 0) {\n                return toast.dark('Please enter your timeslots',{ transition : Slide  })\n            }\n        }\n\n        const restructureDates = []\n\n        this.state.timeSlots.map((timeslot) => {\n            restructureDates.push({\n                \"day\": timeslot[\"start\"].getDay(),\n                \"start\": timeslot[\"start\"].toTimeString(),\n                \"end\": timeslot[\"end\"].toTimeString(),\n                \"filled\": {}\n            })\n        })\n\n        const session = { \n            \"section\": this.state.section,\n            \"name\": this.state.name,\n            \"link\": this.state.link,\n            \"descriptions\": this.state.description,\n            \"timeslots\": restructureDates\n        }\n\n        SessionService.createSession(this.props.match.params.orgId, this.props.match.params.eventId, session).then((session) => {\n            if (session) {\n                toast.dark('Updated sessions!',{ transition : Slide  })\n                toast.dark('Now redirecting you back to all sessions', { transition : Slide  })\n\n                setTimeout(() => {\n                    window.open(\"/c/\" + this.props.match.params.orgId + \"/\" + this.props.match.params.eventId)\n                    }, 3500)\n                }\n            })\n        };\n    \n      render() {\n                   \n        return (\n            <div className=\"eventBody\">\n                    <div className=\"eventHeader\">\n                        <div className=\"container\">\n                            <img style={{marginTop: 20}} src={require('../../assets/icon.svg')} />\n                        </div>\n                </div>  \n\n            <div style={{paddingTop: 80}} className=\"eventPageBody container\">\n\n                <br></br>\n          \n            <p className=\"eventWhiteHeaderTitle\" style={{marginBottom: 5, marginTop: 25}}>{this.props.match.params.eventId}</p>\n            <p className=\"eventWhiteHeaderTitle\" style={{marginBottom: 5, fontSize: 16}}>{this.props.match.params.orgId}</p>\n\n            <Row style={{marginLeft: 2}}>\n            <Input style={{marginRight: 30}} placeholder=\"Section (Optional)\" onChange={(text) => this.setState({ section : text.target.value }) }  />\n              <Input style={{marginRight: 30}} placeholder=\"Full Name\" onChange={(text) => this.setState({ name : text.target.value }) }  />\n              <Input placeholder=\"Link (Optional)\" style={{marginRight: 30}}  onChange={(text) => this.setState({ link : text.target.value })}  />\n            \n              </Row>\n              <br></br>\n              <Form>\n                <TextArea  placeholder=\"Description\" onChange={(text) => this.setState({ description : text.target.value })} placeholder='Tell us more' />\n            </Form>\n            <br></br>\n\n                    <AvailableTimes\n                \n                    weekStartsOn=\"monday\"\n                    onClick={(date) => console.log(date)}\n                    calendars={[\n                        {\n                        id: 'work',\n                        title: 'Work',\n                        foregroundColor: '#ff00ff',\n                        backgroundColor: '#f0f0f0',\n                        selected: true,\n                        },\n                    ]}\n                    onChange={(selections) => this.setState({ timeSlots : selections })}         \n                    height={600}\n                    recurring={false}\n                    availableDays={['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']}\n                    availableHourRange={{ start: 0, end: 24 }}\n                    />\n                    <br></br>\n                    <Button className=\"createEventBtn float-right\" onClick={this.submitMentor}> Submit </Button>\n\n            </div>\n            <ToastContainer />\n          </div>\n        );\n      }\n}\n\nexport default MentorForm;","import React from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { ReactFormBuilder, ReactFormGenerator } from \"react-form-builder2\";\nimport { Button, Card, CardBody, Col, Row } from \"reactstrap\";\nimport { Icon } from \"semantic-ui-react\";\nimport { db } from \"../firebase\";\nimport { LoadingPage } from \"../LoadingPage\";\nimport { EventService } from \"../networking/events/EventService\";\nimport { PageNotFound } from \"../PageNotFound\";\n\nclass EventPage extends React.Component {\n    constructor() {\n        super();\n        this.orgId = \"\"\n        this.uid = \"\"\n        this.eventId = \"\"\n        this.currWeek = \"\"\n        this.state={\n            eventData: [],\n            pageNotFound: false,\n            isLoading: true,\n        }\n    }\n\n    getEventData = async(orgId, eventId) => {\n        await EventService.getEvent(orgId, eventId).then((event) => {\n            if (event) {\n                this.setState({ eventData : event });\n            } else {\n                this.pageNotFound();\n            }\n            this.isLoading();\n        })\n    };\n\n    pageNotFound() {\n        this.setState({ pageNotFound : true })\n    };\n\n    isLoading() {\n        this.setState({ isLoading : false })\n    };\n\n    componentDidMount() {\n    \n        this.getEventData(this.props.match.params.orgId, this.props.match.params.eventId);\n    };\n\n    render() {\n        if (this.state.pageNotFound) {\n            return <PageNotFound />\n        }\n\n       if (this.state.isLoading) {\n        return <LoadingPage />\n    }\n\n      \n        return (\n            <div className=\"eventBody\">\n            <div className=\"eventHeader\">\n                <div className=\"container\">\n                    <img style={{marginTop: 20}} src={require('../../assets/icon.svg')} />\n\n                    <p style={{marginTop: 23}} className=\"userProfile float-right\"> user settings</p>\n                </div>\n            </div>            \n            <div className=\"eventWhiteHeader\">\n                        <div style={{marginTop: 10}} className=\"container\">\n                        <Button style={{marginBottom: 0}} className=\"backBtn\" onClick={() => window.location.href = '/events/' + this.props.match.params.orgId + '/all'}> <Icon name=\"long arrow alternate left\" /> Back </Button>\n\n                            <span> <p style={{marginBottom: 8}} className=\"eventWhiteHeaderTitle text-center\">{this.props.match.params.eventId}</p>\n                            </span>\n\n                            <Row style={{justifyContent: 'center'}}>\n                            <p onClick={() => window.open(\"/c/\" + this.props.match.params.orgId + \"/\" + this.props.match.params.eventId)} className=\"liveLinkHeader text-center\">{window.location.origin.toString() + \"/c/\" + this.props.match.params.orgId + \"/\" + this.props.match.params.eventId}</p>\n                            </Row>\n                    </div>\n                    \n                </div>\n\n            <div className=\"eventPageBody container\">\n\n                <p className=\"eventSubTabs\"> all sessions </p>\n                    <Row>\n                    {\n                        Object.keys(this.state.eventData).map((mentor) => {\n                            return (\n                                <Col style={{marginBottom: 30}} sm={4}>\n                                <FadeIn delay=\"400\">\n                                    <Card style={{cursor: 'pointer'}}  className=\"eventProjectCard\">\n                                        <div className=\"eventProjectGradCard\"></div>\n                                        <CardBody>\n                                        {/* <p style={{marginBottom: 0}} className=\"eventProjectTitle\"> {this.state.eventData[\"mentors\"][mentor][\"name\"]} </p>\n                                        <p style={{textDecoration: 'underline', opacity: 0.4, fontSize: '13px'}}> {this.state.eventData[\"mentors\"][mentor][\"link\"]} </p>\n                                        <p > {this.state.eventData[\"mentors\"][mentor][\"descriptions\"]} </p> */}\n                                    </CardBody>\n                                    </Card>\n                                </FadeIn>\n                            </Col>\n                            )    \n                        })\n                    }\n                </Row>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default EventPage;","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport './styles/main.scss';\nimport './styles/homepage.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LoginPage from './pages/LoginPage';\nimport AllEventsPage from './pages/allevents/AllEventsPage';\nimport LiveEventPage from './pages/LiveEvent/LiveEventPage';\nimport MentorForm from './pages/mentors/MentorForm';\nimport EventPage from './pages/Event/EventPage';\nimport { OrgService } from './pages/networking/organizations/OrgService';\nimport { db } from './pages/firebase';\nimport { EventService } from './pages/networking/events/EventService';\nimport { LoadingPage } from './pages/LoadingPage';\nimport { PageNotFound } from './pages/PageNotFound';\n\nconst getBasename = () => {\n  return `/${process.env.PUBLIC_URL.split('/').pop()}`;\n};\n\nconst checkOrgId = async(userToken) => {\n  var orgId = localStorage.getItem('org_id')\n  if (orgId == undefined) {\n      return await OrgService.getAllOrganizations(userToken).then((org) => {\n        if (org) {\n          orgId = org[0][\"_id\"]\n          localStorage.setItem('org_id', orgId)\n          return orgId;\n        }\n      })\n  }\n  return orgId;\n}\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state={\n      orgId: '',\n      user: false,\n      isLoading: true,\n    }\n  }\n\n  getOrgId = async() => {\n    db.auth().onAuthStateChanged(async(user) => {\n      if (user) {\n        this.setState({ user : true })\n        checkOrgId(await EventService.getUserToken()).then((orgId) => {\n          this.setState({ orgId : orgId })\n        })\n      }\n      this.setState({ isLoading : false })\n    });\n  };\n\n  async componentDidMount() {\n    this.getOrgId()\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingPage />\n    }\n\n    return (\n      <BrowserRouter basename={getBasename()}>\n            <Switch>\n\n\n<Route\n          exact\n          path='/'\n          component={ this.state.user ? (props) => { return  <AllEventsPage {...props} orgId={this.state.orgId}  /> } : (props) => { return  <LoginPage /> }} \n          />\n\n        <Route\n          exact\n          path='/login'\n          component={LoginPage}\n          />\n\n        <Route\n          exact\n          path='/events/:orgId/all'\n          component={ this.state.user ? (props) => { return  <AllEventsPage {...props}  /> } : (props) => { return  <LoginPage /> }}\n          />\n\n\n      <Route\n          exact\n          path='/c/:orgId/:eventId'\n          component={LiveEventPage}\n        />\n\n      <Route\n          exact\n          path='/createsession/:orgId/:eventId'\n          component={MentorForm}\n        />\n\n      <Route\n          exact\n          path='/events/info/:orgId/:eventId/'\n          component={ this.state.user ? (props) => { return  <EventPage {...props}  /> } : (props) => { return  <LoginPage /> }}\n        />\n          </Switch>\n        </BrowserRouter>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import * as FullStory from '@fullstory/browser';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}