{"version":3,"sources":["assets/icon.svg","pages/firebase.js","pages/LiveEvent/utils/LiveSiteUtil.js","pages/networking/endpoints.js","pages/networking/events/EventManager.js","pages/networking/events/EventService.js","pages/networking/keys/KeyManager.js","pages/networking/keys/KeyService.js","pages/networking/sessions/SessionManager.js","pages/networking/sessions/SessionService.js","pages/networking/demo/Demo.js","pages/networking/organizations/OrgManager.js","pages/networking/organizations/OrgService.js","pages/networking/authentication/Auth.js","pages/LoginPage.js","globalcomp/UserDropDown.js","pages/LoadingPage.js","pages/PageNotFound.js","pages/allevents/components/AddEventModal.js","globalcomp/ExitDemoModal.js","pages/allevents/AllEventsPage.js","pages/LiveEvent/components/DeleteMentorModal.js","pages/LiveEvent/components/ReserveMentor.js","pages/LiveEvent/subtabs/Mentors.js","pages/LiveEvent/subtabs/TodaySession.js","pages/LiveEvent/subtabs/SubTabManager.js","pages/LiveEvent/LiveEventPage.js","pages/mentors/MentorForm.js","pages/Event/EventPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LiveSiteUtils","firstday","moment","startOf","toDate","lastday","endOf","monthNames","getMonth","getDate","getFullYear","name","replace","toLowerCase","atlasAPI","axios","create","baseURL","EventManager","getAllEvents","userToken","orgId","a","config","headers","get","console","log","getEvent","eventId","createEvent","event","post","deleteEvent","delete","EventService","getUserToken","Promise","resolve","reject","then","exp","unsubscribe","auth","onAuthStateChanged","user","resp","getIdTokenResult","token","KeyManager","createKey","key","KeyService","SessionManager","getAllSessions","createSession","session","updateSession","sessionId","put","SessionService","eventData","sessionData","Demo","createDemoData","map","id","OrganizationManager","getAllOrganizations","getOrganization","createOrganization","org","OrgService","Auth","signUp","email","password","fullOrgName","displayName","createUserWithEmailAndPassword","updateProfile","orgName","body","toast","dark","localStorage","setItem","setTimeout","window","location","href","catch","error","code","errorMessage","message","login","signInWithEmailAndPassword","val","LoginPage","teamName","state","hasAccount","className","this","Card","CardBody","style","padding","delay","marginBottom","InputGroup","height","color","InputGroupAddon","background","addonType","InputGroupText","borderRight","width","Input","onChange","text","setState","target","value","placeholder","marginTop","type","onClick","React","Component","getUsername","currentUser","UserBanner","teamId","useState","username","Dropdown","icon","marginLeft","Icon","Menu","Item","textAlign","signOut","clear","LoadingPage","class","PageNotFound","margin","AddEventModal","props","updateEvents","children","modal","setModal","setName","description","setDesc","instruction","setInstruction","setKey","toggle","eventBody","keyBody","Modal","overlay","isOpen","ModalHeader","cssModule","borderBottom","paddingBottom","fontWeight","fontSize","ModalBody","Label","borderRadius","Form","TextArea","ModalFooter","borderTop","Button","border","boxShadow","ExitDemoModal","opened","open","setOpen","useEffect","basic","onClose","onOpen","size","Header","Content","Actions","inverted","AllEventsPage","pageNotFound","getEvents","events","isLoading","exitTutorial","startTutorial","introJs","setOptions","skipLabel","highlightClass","exitOnOverlayClick","showProgress","steps","title","intro","element","document","getElementById","start","onexit","match","params","getItem","src","require","Row","Col","sm","cursor","marginRight","DeletePersonModal","trigger","ReserveMentor","currWeek","timeslot","mentor","updateMentor","updateCurrMentor","setSlot","projectName","idx","setIdx","reserveMentor","transition","Slide","uuid","sessions","Accordion","styled","Object","keys","time","i","person","j","Title","active","index","handleClick","Mentors","mentors","category","currentMentor","selectMentor","mentorId","chooseCategory","tags","tagOptions","colors","grad","length","includes","push","label","empty","circular","float","Divider","content","scrolling","option","textDecoration","day","times","sort","b","Date","format","filter","item","opacity","TodaySession","todayDate","columns","field","sorted","resizable","editable","headerName","availTodaySess","isAvailable","getDay","end","rows","mentorInfo","getMemberInfo","week","people","filterMode","sortModel","TabManager","updateMentors","LiveEventPage","getMentorData","eventInfo","updateTabData","tabName","tab","pageComponent","introStep","onafterchange","click","oncomplete","position","top","origin","toString","paddingTop","display","bottom","MentorForm","submitMentor","timeSlots","restructureDates","toTimeString","section","link","toLocaleLowerCase","uid","weekStartsOn","date","calendars","foregroundColor","backgroundColor","selected","selections","recurring","availableDays","availableHourRange","EventPage","getEventData","justifyContent","checkOrgId","undefined","App","getOrgId","basename","process","split","pop","exact","path","component","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab7c6d60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.c4781172.svg\";","\nimport firebase from \"firebase\"\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyABR9I-8WnPTO9f_Kb0wmP32U6ezQcT_rw\",\n  authDomain: \"atlasplanner-e530e.firebaseapp.com\",\n  databaseURL: \"https://atlasplanner-e530e-default-rtdb.firebaseio.com\",\n  projectId: \"atlasplanner-e530e\",\n  storageBucket: \"atlasplanner-e530e.appspot.com\",\n  messagingSenderId: \"466708251492\",\n  appId: \"1:466708251492:web:449bf0c4e036f351fc3071\"\n};\n\nexport const db = firebase.initializeApp(firebaseConfig);","import React from \"react\";\nimport moment from \"moment\"\n\nexport const LiveSiteUtils = {\n\n    getCurrWeek() {\n        var firstday = moment().startOf('week').toDate()\n        var lastday   = moment().endOf('week').toDate();\n    \n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n                \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n\n        return monthNames[firstday.getMonth()] + \" \" + firstday.getDate() + \", \" + firstday.getFullYear() +  \" - \" + monthNames[lastday.getMonth()] + \" \" + lastday.getDate() + \", \" + firstday.getFullYear()  \n    },\n\n    splitSpacesToDashes(name) {\n        var str = name.replace(/\\s+/g, '-').toLowerCase();\n        return str;\n    },\n\n    splitDashestoSpaces(name) {\n        var str = name.replace('-', ' ').split(' ')\n        return str[0];\n    }\n\n}","import axios from 'axios'\n\nexport const atlasAPI = axios.create({ baseURL: 'https://atlasplanner.ue.r.appspot.com' });\n","import Axios from \"axios\";\nimport { atlasAPI } from \"../endpoints\";\n\nexport const EventManager = {\n\n  getAllEvents: async (userToken, orgId) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.get(\n        '/events/' + orgId,\n        config\n      )\n    } catch (error) {\n      console.log(error)\n      return null;\n    }\n  },\n\n  getEvent: async (userToken, orgId, eventId) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.get(\n        '/events/' + orgId + '/' + eventId,\n        config\n      )\n    } catch (error) {\n      console.log(error)\n      return null;\n    }\n  },\n\n  createEvent: async (userToken, orgId, event) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.post(\n        '/events/' + orgId,\n        event,\n        config\n      )\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  },\n\n  deleteEvent: async (userToken, orgId, eventId) => {\n    try {\n      const config = {\n        headers: {\n          \"Authorization\": \"Bearer \" + userToken,\n        },\n      };\n      return await atlasAPI.delete(\n        '/events/' + orgId + '/' + eventId,\n        config\n    )\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n\n}\n","\nimport React from \"react\";\nimport { db } from \"../../firebase\";\nimport { EventManager } from \"./EventManager\";\n\nexport const EventService = {\n\n    getAllEvents: async(orgId) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                EventManager.getAllEvents(userToken, orgId).then((exp) => {\n                    if (exp != null && exp) {\n                        if (exp) {\n                            resolve(exp[\"data\"][\"events\"]);\n                        } else {\n                            resolve(null);\n                        }\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab events.')\n            return null;\n        }\n    },\n\n    createEvent: async(orgId, name) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                EventManager.createEvent(userToken, orgId, name).then((exp) => {\n                    if (exp != null && exp) {\n                        resolve(exp[\"data\"][\"event\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab events.')\n            return null;\n        }\n    },\n\n    deleteEvent: async(orgId, eventId) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                EventManager.deleteEvent(userToken, orgId, eventId).then((exp) => {\n\n                    console.log(exp)\n                    console.log(exp[\"data\"][\"events\"])\n                    if (exp) {\n                        resolve(exp[\"data\"][\"events\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab events.')\n            return null;\n        }\n    },\n\n    getEvent: async(orgId, eventId) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                EventManager.getEvent(userToken, orgId, eventId).then((exp) => {\n                    if (exp != null & exp) {\n                        console.log(exp[\"data\"][\"events\"])\n                        if (exp) {\n                            resolve(exp[\"data\"][\"events\"]);\n                        } else {\n                            resolve(null);\n                        }\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab events.')\n            return null;\n        }\n    },\n\n    async getUserToken() {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = db.auth().onAuthStateChanged(async (user) => {\n                unsubscribe();\n                resolve(user);\n            }, reject);\n        }).then(async (resp) => {\n            if (resp) {\n                return (await resp.getIdTokenResult(true)).token;\n            }\n        });\n    },\n}\n","import React from \"react\";\nimport { atlasAPI } from \"../endpoints\";\n\nexport const KeyManager = {\n\n    createKey: async (userToken, orgId, eventId, key) => {\n        const config = {\n          headers: {\n            \"Authorization\": userToken,\n          },\n        };\n        \n        try {\n          return await atlasAPI.post(\n            '/keys/' + orgId + '/' + eventId,\n            key,\n            config\n          )\n        } catch (error) {\n          console.log(error);\n          return null;\n        }\n      },\n\n}","import React from \"react\";\nimport { EventService } from \"../events/EventService\";\nimport { KeyManager } from \"./KeyManager\";\n\nexport const KeyService = {\n\n    createKey: async(orgId, eventId, key) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                KeyManager.createKey(userToken, orgId, eventId, key).then((exp) => {\n                    if (exp != null && exp) {\n                        if (exp) {\n                            resolve(exp[\"data\"][\"key\"]);\n                        } else {\n                            resolve(null);\n                        }\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot create keys.')\n            return null;\n        }\n    },\n\n}\n","import Axios from \"axios\";\nimport { atlasAPI } from \"../endpoints\";\n\nexport const SessionManager = {\n\n  getAllSessions: async (userToken, orgId, eventId) => {\n    const config = {};\n    try {\n      return await atlasAPI.get(\n        '/sessions/' + orgId  + '/' + eventId,\n        config\n      )\n    } catch (error) {\n      console.log(error)\n      return null;\n    }\n  },\n\n  createSession: async (userToken, orgId, eventId, session) => {\n    const config = {};\n    try {\n      return await atlasAPI.post(\n        '/sessions/' + orgId + '/' + eventId,\n        session,\n        config\n      )\n    } catch (error) {\n        return null;\n    }\n  },\n\n  updateSession: async (userToken, orgId, eventId, sessionId, session) => {\n    const config = {};\n    try {\n      return await atlasAPI.put(\n        '/sessions/' + orgId + '/' + eventId + '/' + sessionId,\n        session,\n        config\n      )\n    } catch (error) {\n        return null;\n    }\n  },\n}\n","\nimport React from \"react\";\nimport { db } from \"../../firebase\";\nimport { EventService } from \"../events/EventService\";\nimport { SessionManager } from \"./SessionManager\";\n\nexport const SessionService = {\n\n    getAllSessions: async(orgId, eventId) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                SessionManager.getAllSessions(userToken, orgId, eventId).then((exp) => {\n                    if (exp != null && exp) {\n                        resolve(exp[\"data\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab sessions.')\n            return null;\n        }\n    },\n\n    createSession: async(orgId, eventId, session) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                SessionManager.createSession(userToken, orgId, eventId, session).then((exp) => {\n                    console.log(exp)\n                    if (exp != null && exp) {\n                            resolve(exp[\"data\"][\"sessions\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot create sessions.')\n            console.log(err)\n            return null;\n        }\n    },\n\n    updateSession: async(orgId, eventId, sessionId, session) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                SessionManager.updateSession(userToken, orgId, eventId, sessionId, session).then((exp) => {\n                    if (exp != null && exp) {\n                            resolve(exp[\"data\"][\"sessions\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot create sessions.')\n            console.log(err)\n            return null;\n        }\n    },\n}\n","import React from \"react\";\nimport { EventService } from \"../events/EventService\";\nimport { KeyService } from \"../keys/KeyService\";\nimport { SessionService } from \"../sessions/SessionService\";\n\n\nconst eventData = {\n    \"name\": 'cs-13xx-office-hours',\n    'description': 'This is only for the online section.',\n    'instruction': 'Please reserve a time with a TA by selecting one of the TA cards and entering your name.'\n}\n\n\nconst sessionData =  {\n    \"session\": [{\n           \"_orgId\": \"\",\n           \"_eventId\": eventData['name'],\n           \"name\": \"John Smith\",\n           'category': 'Head TA',\n           \"descriptions\": \"Located in building Buzz room 103. Best at helping recitation worksheet questions.\",\n           \"link\": \"https://zoom.web/john-smith\",\n           \"section\": \"B1\",\n           \"timeslots\": [\n               {\n                   \"day\": 0,\n                   \"start\": \"09:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"end\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"filled\": {}\n               },\n               {\n                   \"day\": 1,\n                   \"start\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"end\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"filled\": {}\n               },\n               {\n                   \"day\": 2,\n                   \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                   \"filled\": {}\n               }]\n        }, {\n            \"_orgId\": \"\",\n            \"_eventId\": eventData['name'],\n            \"name\": \"Anna Locke\",\n            'category': 'Head TA',\n            \"descriptions\": \"Only use zoom and bluejeans. Contact me for regrading questions - regrade can only be done for recent assignments from the last two weeks.\",\n            \"link\": \"https://zoom.web/anna-locke\",\n            \"section\": \"B1\",\n            \"timeslots\": [\n                {\n                    \"day\": 0,\n                    \"start\": \"03:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"end\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"filled\": {}\n                },\n                {\n                    \"day\": 1,\n                    \"start\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"end\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"filled\": {}\n                },\n                {\n                    \"day\": 2,\n                    \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                    \"filled\": {}\n                }]\n            }, {\n                \"_orgId\": \"\",\n                \"_eventId\": eventData['name'],\n                \"name\": \"Jonathan Jones\",\n                'category': 'Applications',\n                \"descriptions\": \"Head TA. Can answer urgent, immediate questions, if needed. Take TA applications for next year run.\",\n                \"link\": \"https://zoom.web/jonathan-jones\",\n                \"section\": \"B1\",\n                \"timeslots\": [\n                    {\n                        \"day\": 0,\n                        \"start\": \"03:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"end\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"filled\": {}\n                    },\n                    {\n                        \"day\": 3,\n                        \"start\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"end\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"filled\": {}\n                    },\n                    {\n                        \"day\": 4,\n                        \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                        \"filled\": {}\n                    }]\n                }, {\n                    \"_orgId\": \"\",\n                    \"_eventId\": eventData['name'],\n                    \"name\": \"Alexa Allison\",\n                    'category': 'Q&A',\n                    \"descriptions\": \"Recent post-grad student that has TAd for this course. I can answer any of the book questions needed since we have answers for those.\",\n                    \"link\": \"https://zoom.web/alexa-allison\",\n                    \"section\": \"B1\",\n                    \"timeslots\": [\n                        {\n                            \"day\": 0,\n                            \"start\": \"03:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        },\n                        {\n                            \"day\": 1,\n                            \"start\": \"10:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        },\n                        {\n                            \"day\": 2,\n                            \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        },\n                        {\n                            \"day\": 3,\n                            \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        },  {\n                            \"day\": 4,\n                            \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        }, {\n                            \"day\": 5,\n                            \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        }, {\n                            \"day\": 6,\n                            \"start\": \"11:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"end\": \"12:00:00 GMT-0400 (Eastern Daylight Time)\",\n                            \"filled\": {}\n                        }\n                    \n                    ]\n                }\n    ]}\n\nexport const Demo = {\n\n    createDemoData: async(orgId) => {\n        await EventService.createEvent(orgId, eventData).then((event) => {\n            if (event) {\n                console.log(orgId, event, '')\n                KeyService.createKey(orgId, eventData['name'], {key: \"\"}).then((key) => {\n                    sessionData['session'].map((session, id) => {\n                        sessionData['session'][id]['_orgId'] = orgId\n                        sessionData['session'][id]['key'] = \"\"\n                        SessionService.createSession(orgId, eventData['name'], session)\n                    })\n                })\n            }\n        })\n    }\n\n}","import Axios from \"axios\";\nimport { atlasAPI } from \"../endpoints\";\n\nexport const OrganizationManager = {\n\n  getAllOrganizations: async (userToken) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.get(\n        '/organizations',\n        config\n      )\n    } catch (error) {\n      console.log(error)\n      return null;\n    }\n  },\n\n  getOrganization: async (userToken, orgId) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.get(\n        '/organizations/' + orgId,\n        config\n      )\n    } catch (error) {\n        return null;\n    }\n  },\n\n  createOrganization: async (userToken, org) => {\n    const config = {\n      headers: {\n        \"Authorization\": userToken,\n      },\n    };\n    try {\n      return await atlasAPI.post(\n        '/organizations',\n        org,\n        config\n      )\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  },\n\n}\n","\nimport React from \"react\";\nimport { db } from \"../../firebase\";\nimport { LiveSiteUtils } from \"../../LiveEvent/utils/LiveSiteUtil\";\nimport { EventService } from \"../events/EventService\";\nimport { OrganizationManager } from \"./OrgManager\";\n\nexport const OrgService = {\n\n    getAllOrganizations: async() => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                OrganizationManager.getAllOrganizations(userToken).then((exp) => {\n                    if (exp != null && exp) {\n                        resolve(exp[\"data\"][\"organizations\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab organizations.')\n            return null;\n        }\n    },\n\n    createOrganization: async(orgId) => {\n        console.log(orgId)\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                OrganizationManager.createOrganization(userToken, orgId).then((exp) => {\n                    if (exp != null && exp) {\n                            resolve(exp[\"data\"][\"organization\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot create organization.')\n            console.log(err)\n            return null;\n        }\n    },\n\n    getOrganization: async(orgId) => {\n        const userToken = await EventService.getUserToken()\n        try {\n            return new Promise((resolve, reject) => {\n                OrganizationManager.getOrganization(userToken, orgId).then((exp) => {\n                    if (exp != null) {\n                        resolve(exp[\"data\"][\"organizations\"]);\n                    } else {\n                        resolve(null);\n                    }\n                }, reject);\n            })\n        } catch (err) {\n            console.log('Cannot grab events.')\n            return null;\n        }\n    },\n\n    async getUserToken() {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = db.auth().onAuthStateChanged(async (user) => {\n                unsubscribe();\n                resolve(user);\n            }, reject);\n        }).then(async (resp) => {\n            if (resp) {\n                return (await resp.getIdTokenResult(true)).token;\n            }\n        });\n    },\n}\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { db } from \"../../firebase\";\nimport { LiveSiteUtils } from \"../../LiveEvent/utils/LiveSiteUtil\";\nimport { Demo } from \"../demo/Demo\";\nimport { OrgService } from \"../organizations/OrgService\";\n\nexport const Auth = {\n\n    signUp: async(email, password, fullOrgName, displayName) => {\n        db.auth().createUserWithEmailAndPassword(email, password).then((user) => {\n            user.user.updateProfile({\n                displayName: displayName\n            })\n            var orgName = LiveSiteUtils.splitSpacesToDashes(fullOrgName)\n\n            const body = {\n                'name': orgName\n            }\n                OrgService.createOrganization(body).then((org) => {\n                    if (org) {\n                        localStorage.setItem('org_id', orgName)\n                        Demo.createDemoData(orgName).then(() => {\n                            localStorage.setItem('new_user', true)\n                            setTimeout(() => {\n                                return window.location.href = '/events/' + orgName + '/all'\n                            },500)\n                        })\n                    } else {\n                        return toast.dark('Organization name is taken. Try another name.')\n                    }\n                })\n        }).catch(function(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            return toast.dark(errorMessage)\n        });\n    },\n\n    login: async(email, password) => {\n        db.auth().signInWithEmailAndPassword(email, password).then((user) => {\n                OrgService.getAllOrganizations().then((val) => {\n                    localStorage.setItem('new_user', false)\n                    if (val) {\n                        localStorage.setItem('org_id', val[0][\"_id\"])\n                        return window.location.href = '/events/' + val[0][\"_id\"] + '/all'\n                    }\n                })\n        }).catch(function(error) {\n            var errorMessage = error.message;\n            return toast.dark(errorMessage)\n        });\n    }\n}","import React from 'react';\nimport { Card, CardBody } from 'reactstrap'\nimport FadeIn from 'react-fade-in';\nimport MailOutlineRoundedIcon from '@material-ui/icons/MailOutlineRounded';\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport LockIcon from '@material-ui/icons/Lock';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { Auth } from './networking/authentication/Auth';\n\nclass LoginPage extends React.Component {\n    constructor() {\n        super();\n        this.state={\n            hasAccount: true,\n            email: '',\n            password: '',\n            name: '',\n            orgName: ''\n        }\n    }\n\n    signUp = async(email, password, teamName, name) => {\n        return await Auth.signUp(email, password, teamName, name)\n    };\n\n    login = async(email, password) => {\n        return await Auth.login(email, password)\n    };\n\n    render() {\n\n        return (\n            <div className=\"signInBg\">\n\n               {\n                   this.state.hasAccount ? \n\n                <div>\n                    <Card id=\"card-demo\" className=\"signInCard\">\n                        <CardBody style={{padding: 37 }}>\n                        <FadeIn delay=\"300\">\n                            {/* <img style={{marginBottom: 13}} src={require('../assets/stackstrLogoRocket.svg')} /> */}\n\n                            <p className=\"signInVoyagerTitle\" style={{marginBottom: 10}}> Atlas planner </p>\n                            <InputGroup style={{height: 41, color: 'black'}}>\n                            <InputGroupAddon style={{background: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><MailOutlineRoundedIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ email : text.target.value })} style={{height: 41, color: 'black'}} placeholder=\"Email address\" />\n                        </InputGroup>\n\n                        <InputGroup style={{marginTop: 10, height: 41}}>\n                            <InputGroupAddon style={{background: 'white', borderRight: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><LockIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ password : text.target.value })} type=\"password\" style={{height: 41, color: 'black'}} placeholder=\"Password\" />\n                        </InputGroup>\n                            {/* <p className=\"forgotPassLink\"> Forgot password? </p> */}\n                            <br></br>\n                            <br></br>\n\n                            <button onClick={() => this.login(this.state.email, this.state.password)} id=\"card__image\" className=\"signInBtn\" style={{marginBottom: 11}}> Continue </button> \n\n                            <p onClick={() => this.setState({ hasAccount : false })} className=\"forgotAccountLink\"> Don’t have an account? <span style={{color: '#45484F'}}> Sign up </span> </p>\n                            </FadeIn>\n\n                        </CardBody>\n\n                    </Card>\n                </div>\n                :  \n\n                <div>\n                    <Card id=\"card-demo\" className=\"signInCard\">\n                        <CardBody style={{padding: 37 }}>\n                        <FadeIn delay=\"300\">\n                            {/* <img style={{marginBottom: 13}} src={require('../assets/stackstrLogoRocket.svg')} /> */}\n\n                            <p className=\"signInVoyagerTitle\" style={{marginBottom: 10, width: 140}}> New user sign up. </p>\n                            <InputGroup style={{height: 41, color: 'black'}}>\n                            <InputGroupAddon style={{background: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><MailOutlineRoundedIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ email : text.target.value })} style={{height: 41, color: 'black'}} placeholder=\"Email address\" />\n                        </InputGroup>\n\n                        <InputGroup style={{marginTop: 10, height: 41}}>\n                            <InputGroupAddon style={{background: 'white', borderRight: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><LockIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ password : text.target.value })} type=\"password\" style={{height: 41, color: 'black'}} placeholder=\"Password\" />\n                        </InputGroup>\n                            {/* <p className=\"forgotPassLink\"> Forgot password? </p> */}\n                            <InputGroup style={{marginTop: 10, height: 41}}>\n                            <InputGroupAddon style={{background: 'white', borderRight: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><PersonIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ name : text.target.value })} type=\"Full name\" style={{height: 41, color: 'black'}} placeholder=\"Full name\" />\n                        </InputGroup>\n\n                        <InputGroup style={{marginTop: 10, height: 41}}>\n                            <InputGroupAddon style={{background: 'white', borderRight: 'none'}} addonType=\"prepend\">\n                            <InputGroupText style={{background: 'white', borderRight: 'none'}}><PersonIcon style={{color: 'gray', width: '15px'}} /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input onChange={(text) => this.setState({ orgName : text.target.value })} type=\"Team name\" style={{height: 41, color: 'black'}} placeholder=\"Organization name\" />\n                        </InputGroup>\n                            <br></br>\n\n                            <button onClick={() => this.signUp(this.state.email, this.state.password, this.state.orgName, this.state.name)} id=\"card__image\" className=\"signInBtn\" style={{marginBottom: 11}}> Continue </button> \n\n                            <p onClick={() => this.setState({ hasAccount : true })} className=\"forgotAccountLink\"> Have an account? <span style={{color: '#45484F'}}> Sign in </span> </p>\n                            </FadeIn>\n\n                        </CardBody>\n\n                    </Card>\n                </div>\n\n               }\n\n\n               <ToastContainer />\n\n            </div>\n        )\n    }\n}\n\nexport default LoginPage;","import React, { useState } from \"react\"\nimport { Dropdown, Icon } from \"semantic-ui-react\"\nimport { db } from \"../pages/firebase\"\n\nconst getUsername = () => {\n    return db.auth().currentUser.displayName\n};\n\nexport const UserBanner = ({teamId, ...restProps}) => {\n    const [username, setUsername] = useState(getUsername)\n\n    const logOut = () => {\n        return db.auth().signOut().then(() => {\n            localStorage.clear()\n            return window.location.href = '/login'\n        })\n    };\n\n    return (\n        <Dropdown id=\"user_settings\" className=\"userProfileDropdownBtn\" icon={null} \n            style={{marginLeft: 16}} text={ <div>\n                <Icon style={{color: 'white'}} name=\"user\" /> <span style={{marginLeft: '10'}} className=\"usernameText\"> {username} </span></div> }>\n            <Dropdown.Menu style={{width: '100%'}} >\n                <Dropdown.Item style={{textAlign: 'center'}} onClick={logOut} text='Logout'  />\n            </Dropdown.Menu>\n        </Dropdown>\n    )\n}","import React, { Component } from \"react\";\n\n\nexport class LoadingPage extends Component {\n    render() {\n        return (\n            <div style={{height: '100vh'}}>\n                <div style={{height: '100%'}} class=\"ui inverted segment\">\n                <div class=\"ui active inverted text loader\"> Loading page </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nexport class PageNotFound extends Component {\n    render() {\n        return (\n            <div style={{height: '100vh'}}>\n                <div class=\"ui grid middle aligned segment black inverted\" style={{height: '100%', margin: '0 auto'}}>\n                <div class=\"ui column center aligned\">\n                    <div class=\"ui inverted statistic\">\n                    <div class=\"value\">404</div>\n                    <div style={{marginTop: 10,}} class=\"label\">Page not found</div>\n                    <br></br>\n                    <Button onClick={() => window.location.href = '/'}> Go back </Button>\n                    </div>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}","import { Card } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { Form, Input, TextArea } from 'semantic-ui-react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label,  CardBody, Row, Col, DropdownMenu } from 'reactstrap';\nimport { db } from '../../firebase';\nimport { updateLocale } from 'moment';\nimport 'semantic-ui-css/semantic.min.css'\nimport { EventService } from '../../networking/events/EventService';\nimport { toast } from 'react-toastify';\nimport { LiveSiteUtils } from '../../LiveEvent/utils/LiveSiteUtil';\nimport { KeyService } from '../../networking/keys/KeyService';\n\nexport const AddEventModal = (props) => {\n  const {\n    orgId,\n    className,\n    updateEvents,\n    children,\n  } = props;\n\n  const [modal, setModal] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [description, setDesc] = useState(\"\");\n  const [instruction, setInstruction] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n\n  const toggle = () => setModal(!modal);\n\n  const createEvent = async(name) => {\n    var name = name\n    name = LiveSiteUtils.splitSpacesToDashes(name)\n\n    const eventBody = {\n      'name': name,\n      'description': description,\n      'instruction': instruction,\n    }\n\n    const keyBody = {\n      \"key\": key\n    }\n\n    EventService.createEvent(orgId, eventBody).then((resp) => {\n        if (resp) {\n          console.log(resp)\n          KeyService.createKey(orgId, name, keyBody).then((key) => {\n              if (key) {\n                toggle()\n                updateEvents(orgId)\n              } \n            })\n          } else {\n            toast.dark('Event name is taken.');\n        }\n      })\n  }\n\n  return (\n    <div onClick={toggle}>\n        {children}\n      <Modal style={{padding: 20}} overlay={false} isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader cssModule={{'modal-title': 'w-100 text-center'}} style={{borderBottom: 'none', paddingBottom: '0px', padding: 10, fontWeight: 600, fontSize: '17px', textAlign: 'center'}} className=\"createProjectTitle\" toggle={toggle}> <span style={{borderBottom: 'none', paddingBottom: '0px', fontWeight: 600, fontSize: '17px', textAlign: 'center'}}> Create an Event </span></ModalHeader>\n        <ModalBody>\n        <Label style={{marginBottom: 9}} className=\"createProjectLabel\">  Name </Label>\n        <br></br>\n        <Input style={{width: '100%',  borderRadius: '5px'}} onChange={(text) => setName(text.target.value)} placeholder=\"Enter name\" />\n        <br></br>\n        <br></br>\n        <Label style={{marginBottom: 9,}} className=\"createProjectLabel\">  Key (optional) </Label>\n        <p style={{color: 'GrayText'}}> Note that this does NOT make your event private. This only gives access to those who can create sessions in the event. </p>\n        <Input type=\"password\" style={{width: '100%',  borderRadius: '5px'}} onChange={(text) => setKey(text.target.value)} placeholder=\"Enter key\" />\n        <br></br>\n        <br></br>\n        <Label style={{marginBottom: 9}} className=\"createProjectLabel\">  Instructions (optional) </Label>\n        <br></br>\n        <Form>\n          <TextArea  style={{width: '100%',  borderRadius: '5px'}} onChange={(text) => setInstruction(text.target.value)} placeholder=\"Enter instruction\" />\n        </Form>\n        <br></br>\n        <Label style={{marginBottom: 9}} className=\"createProjectLabel\">  Description (optional) </Label>\n        <br></br>\n        <Form>\n          <TextArea style={{width: '100%',  borderRadius: '5px'}} onChange={(text) => setDesc(text.target.value)} placeholder=\"Enter description\" />\n        </Form>\n        <br></br>\n        </ModalBody>\n        <ModalFooter style={{borderTop: 'none'}}>\n          <Button style={{border: 'none', boxShadow: '0px 4px 14px rgba(58, 116, 148, 0.23)'}} className=\"createEventBtn\" onClick={() => createEvent(name)} color=\"primary\"> + Create </Button>{' '}\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\n\n\n","import { locale } from 'moment';\nimport React, { useEffect } from 'react'\nimport { Button, Header, Icon, Modal, Dropdown } from 'semantic-ui-react'\n\nconst ExitDemoModal = ({opened, ...restProps}) => {\n  const [open, setOpen] = React.useState(opened)\n\n  useEffect(() => {\n\n    if (open != opened) {\n        setOpen(opened)\n    }\n\n  }, [opened])\n\n  const exitTutorial = () => {\n      localStorage.setItem('new_user', false)\n  };\n\n  return (\n      <Modal\n          basic\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          open={open}\n          size='small'>\n          <Header icon>\n            <Icon name=\"delete\" />\n            End tutorial\n          </Header>\n          <Modal.Content>\n          <p style={{textAlign: 'center'}}>\n            Looks like you're trying to exit this tutorial. If you make this action, you cannot undo it. \n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color='white' inverted onClick={() => setOpen(false)}>\n            <Icon name=\"cancel\"  /> No\n          </Button>\n          <Button onClick={exitTutorial} inverted color='red'>\n            <Icon name='trash' /> Yes\n          </Button>\n        </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default ExitDemoModal\n","import { Card } from \"@material-ui/core\";\nimport React from \"react\"\nimport FadeIn from \"react-fade-in\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Button, CardBody, Col, Row } from \"reactstrap\";\nimport { UserBanner } from \"../../globalcomp/UserDropDown\";\nimport { db } from \"../firebase\";\nimport { LoadingPage } from \"../LoadingPage\";\nimport { EventService } from \"../networking/events/EventService\";\nimport { OrgService } from \"../networking/organizations/OrgService\";\nimport { PageNotFound } from \"../PageNotFound\";\nimport { AddEventModal } from \"./components/AddEventModal\";\nimport 'intro.js/introjs.css'\nimport introJs from 'intro.js'\nimport ExitDemoModal from \"../../globalcomp/ExitDemoModal\";\n\n\nclass AllEventsPage extends React.Component {\n    constructor() {\n        super();\n        this.orgId = \"\"\n        this.org = []\n        this.state={\n            events: [],\n            isLoading: true,\n            pageNotFound: false,\n            exitTutorial: false\n        }\n    }\n\n    getOrganization = async(orgId) => {\n        await OrgService.getOrganization(orgId).then((org) => {\n            if (org != null && org) {\n                this.org = org;\n            } else {\n                this.pageNotFound();\n            }\n        })\n    };\n\n    getEvents = async(orgId) => {\n        await EventService.getAllEvents(orgId).then((events) => {\n            if (events != null && events) {\n                this.setState({ events : events })\n            } \n        })\n        this.isLoading();\n    };\n\n    isLoading() {\n        this.setState({ isLoading : false })\n    };\n\n    pageNotFound() {\n        this.setState({ pageNotFound : true })\n    };\n\n    exitTutorial = () => {\n        console.log('made it ')\n        this.setState({ exitTutorial : true })\n    }\n\n    startTutorial = async() => {\n        return setTimeout(() => {\n            return introJs().setOptions({\n                skipLabel: \"\",\n                highlightClass: true,\n                exitOnOverlayClick: false,\n                showProgress: true,\n                steps: [{\n                    title: 'Welcome! 👋',\n                    intro: `Look's like you are new around here! Let's show you around before you officially set up your first event.`\n                }, {\n                    title: 'Your Events',\n                  element: document.getElementById('eventbody'),\n                  intro: \"Your events will be located here - we have provided a sample event for you to later explore around for this tutorial.\" \n                }, {\n                    title: 'Live Links',\n                  element: document.getElementById('live_link'),\n                  intro: \"Each event has a public unique link that is named after your organization & event name.\"\n                },  {\n                    title: 'Create Event',\n                  element: document.getElementById('create_event'),\n                  intro: \"You can create new events by clicking on the button and entering a name.\"\n                },\n                {\n                    title: `Click here!`,\n                    element: document.getElementById('demo_project'),\n                  intro: \"Click on the sample project. See you there! 👋\"\n                }\n            ]\n              }).start().onexit(() => {\n                    this.exitTutorial()\n              });\n        }, 1300)\n    }\n\n  componentDidMount() {\n        this.orgId = this.props.match.params.orgId\n        if (this.props.orgId) {\n            this.props.match.params.orgId = this.props.orgId\n            this.orgId = this.props.orgId\n        }\n        this.getOrganization(this.props.match.params.orgId).then(() => {\n            this.getEvents(this.props.match.params.orgId);\n        });\n        if (localStorage.getItem('new_user') == \"true\") {\n            this.startTutorial()\n        }\n    }\n    \n    render() {\n        if (this.state.pageNotFound) {\n            return <PageNotFound />\n        }\n\n        if (this.state.isLoading) {\n            return <LoadingPage />\n        }\n\n        return (\n            <div className=\"eventBody\">\n                <div className=\"eventHeader\">\n                    <div className=\"container\" >\n                        <img style={{marginTop: 20}} src={require('../../assets/icon.svg')} />\n\n                        <p style={{marginTop: 23}} className=\"userProfile float-right\"> <UserBanner /></p>\n                    </div>\n                </div>\n                    <div style={{paddingBottom: 30}} className=\"eventWhiteHeader\">\n                        <div className=\"container\" style={{marginTop: 50}}>\n                            <span> <span className=\"eventWhiteHeaderTitle\">My events</span>\n                            <Button id=\"create_event\" className=\"float-right createEventBtn \"> <AddEventModal updateEvents={this.getEvents} orgId={this.props.match.params.orgId}> + Create </AddEventModal> </Button>\n\n                            </span>\n                            <br></br>\n\n                        </div>    \n                    </div>                  \n\n                  <div  className=\"eventPageBody container\">\n                      <Row id=\"eventbody\">\n                    {\n                        this.state.events.map((event) => {\n                            if (event[\"name\"] == \"cs-13xx-office-hours\") {\n                                return (\n                                    <Col style={{marginBottom: 30}} sm={4}>\n                                    <FadeIn delay=\"400\">\n                                    <Card id=\"demo_project\" onClick={() => window.location.href = '/c/' + this.orgId + '/' + event[\"name\"]} style={{cursor: 'pointer'}}  className=\"eventProjectCard\">\n                                        <div  className=\"eventProjectGradCard\"></div>\n                                        <CardBody >\n                                            <p className=\"eventProjectTitle\"> {event[\"name\"]} </p>\n                                        </CardBody>\n                                        <div style={{padding: 5}}>\n\n                                        <Button id=\"live_link\" style={{marginRight: 10, marginBottom: 20}} onClick={() => window.location.href = '/c/' + this.orgId + '/' + event[\"name\"]} className=\"float-right getLink\"> Link </Button>\n                                        </div>\n                                    </Card>\n                                    </FadeIn>\n                                </Col>\n                                )\n                            }\n                            return (\n                                <Col style={{marginBottom: 30}} sm={4}>\n                                    <FadeIn delay=\"400\">\n                                    <Card onClick={() => window.location.href = '/c/' + this.orgId + '/' + event[\"name\"]} style={{cursor: 'pointer'}}  className=\"eventProjectCard\">\n                                        <div  className=\"eventProjectGradCard\"></div>\n                                        <CardBody >\n                                            <p className=\"eventProjectTitle\"> {event[\"name\"]} </p>\n                                        </CardBody>\n                                        <div style={{padding: 5}}>\n\n                                        <Button onClick={() => window.location.href = '/c/' + this.orgId + '/' + event[\"name\"]} style={{marginRight: 10, marginBottom: 20}} className=\"float-right getLink\"> Link </Button>\n                                        </div>\n                                    </Card>\n                                    </FadeIn>\n                                </Col>\n                            )\n                        })\n                    }\n                    </Row>\n                </div>\n    \n                <ExitDemoModal opened={this.state.exitTutorial} />\n\n                <ToastContainer />\n\n            </div>\n\n        )\n    }\n}\n\nexport default AllEventsPage;","import React from 'react'\nimport { Button, Header, Icon, Modal, Dropdown } from 'semantic-ui-react'\n\nconst DeletePersonModal = ({orgId, sessionId,...restProps}) => {\n  const [open, setOpen] = React.useState(false)\n\n  const deleteProject = () => {\n\n  };\n\n  return (\n      <Modal\n          basic\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          open={open}\n          size='small'\n          trigger={<Icon className=\"float-right\" name=\"delete\" />}>\n          <Header icon>\n            <Icon name=\"user delete\" />\n            Delete a person\n          </Header>\n          <Modal.Content>\n          <p style={{textAlign: 'center'}}>\n            Looks like you're trying to remove this person. If you make this action, you cannot undo it. \n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color='white' inverted onClick={() => setOpen(false)}>\n            <Icon name=\"cancel\"  /> No\n          </Button>\n          <Button onClick={deleteProject} inverted color='red'>\n            <Icon name='trash' /> Yes\n          </Button>\n        </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default DeletePersonModal\n","import React, { useEffect } from \"react\"\nimport { Card, TextField } from '@material-ui/core';\nimport { useState } from 'react';\nimport { Accordion, Form, Icon, Input, TextArea } from 'semantic-ui-react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label,  CardBody, Row, Col, DropdownMenu, Table } from 'reactstrap';\nimport { db } from \"../../firebase\";\nimport { Slide, toast } from \"react-toastify\";\nimport { SessionService } from \"../../networking/sessions/SessionService\";\nimport uuid from 'react-uuid'\nimport DeletePersonModal from \"./DeleteMentorModal\";\n\nexport const ReserveMentor = (props) => {\n    const {\n      orgId,\n      eventId,\n      currWeek,\n      timeslot,\n      mentor,\n      updateMentor,\n      updateCurrMentor,\n      children,\n    } = props;\n  \n    const [modal, setModal] = useState(false);\n    const [timeslott, setSlot] = useState(timeslot);\n    const [projectName, setName] = useState(\"\");\n    const [idx, setIdx] = useState(0);\n    const [description, setDesc] = useState(\"\");\n  \n    const toggle = () => setModal(!modal);\n\n    useEffect(() => {\n\n            setSlot(timeslot)\n\n    }, [timeslot])\n\n    const handleClick = (i) => {\n      console.log(idx)  \n      setIdx(i)\n    }\n\n    const reserveMentor = async(name) => {\n\n        if (projectName == \"\") {\n            return toast.dark('Please enter a name', {transition: Slide})\n        }\n\n        if (!mentor[\"data\"][\"timeslots\"][timeslot[\"id\"]][\"filled\"][currWeek]) {\n          mentor[\"data\"][\"timeslots\"][timeslot[\"id\"]][\"filled\"][currWeek] = {}\n        }\n\n        const id = uuid();\n\n        mentor[\"data\"][\"timeslots\"][timeslot[\"id\"]][\"filled\"][currWeek][id] = {\"name\": projectName, \"description\": description}\n\n        const body = { \"session\" : mentor[\"data\"]}\n\n        SessionService.updateSession(orgId, eventId, mentor[\"data\"][\"_id\"], body).then((sessions) => {\n          console.log(sessions)\n            if (sessions) {\n                toast.dark('Successfully added to session', {transition: Slide})\n\n                updateMentor()\n                updateCurrMentor(mentor[\"id\"])\n                toggle()\n            }\n        })\n    }\n    return (\n      <div onClick={toggle}>\n          {children}\n        <Modal style={{padding: 20}} overlay={false} isOpen={modal} toggle={toggle} >\n          <ModalHeader cssModule={{'modal-title': 'w-100 text-center'}} style={{borderBottom: 'none', paddingBottom: '0px', padding: 10, fontWeight: 600, fontSize: '17px', textAlign: 'center'}} className=\"createProjectTitle\" toggle={toggle}> <span style={{borderBottom: 'none', paddingBottom: '0px', fontWeight: 600, fontSize: '17px', textAlign: 'center'}}> Reserve Session </span></ModalHeader>\n          <ModalBody>\n          <Label style={{marginBottom: 9}} className=\"createProjectLabel\"> Your Name </Label>\n          <br></br>\n          <Input style={{width: '100%'}} onChange={(text) => setName(text.target.value)} placeholder=\"Enter name\" />\n          <br></br>\n          <br></br>\n          <Label style={{marginBottom: 9}} className=\"createProjectLabel\"> Extra Info </Label>\n          <br></br>\n          <Form>\n          <TextArea style={{width: '100%'}} onChange={(text) => setDesc(text.target.value)} placeholder=\"What are we talking about? (optional)\" />\n          </Form>\n          <br></br>\n          <br></br>\n          <p> Participants </p>\n          <Accordion styled>\n           \n          {\n              Object.keys(timeslot[\"filled\"]).map((time, i) => {\n                  if (time == currWeek) {\n                    return Object.keys(timeslot[\"filled\"][time]).map((person, j) => {\n                        return <span>\n                        <Accordion.Title\n                            active={j === idx}\n                            index={j}\n                            onClick={() => handleClick(j)}\n                          >\n                          \n                                <Icon name=\"user\" style={{marginRight: 15}} />\n                                {timeslot[\"filled\"][time][person][\"name\"]}\n                               <DeletePersonModal orgId={orgId} /> \n                          </Accordion.Title>\n                          <Accordion.Content active={j === idx}>\n                            <p>\n                            {timeslot[\"filled\"][time][person][\"description\"]}\n                            </p>\n                          </Accordion.Content>\n                      </span>\n                           \n                    })\n                  }\n              })\n          }\n\n          </Accordion>\n           \n          </ModalBody>\n          <ModalFooter style={{borderTop: 'none'}}>\n            <Button className=\"createEventBtn\" onClick={() => reserveMentor(projectName)} color=\"primary\"> Submit </Button>{' '}\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n  ","import React, { Component } from \"react\"\nimport { LiveSiteUtils } from \"../utils/LiveSiteUtil\"\nimport { Card, CardBody, Col, Row } from \"reactstrap\";\nimport FadeIn from \"react-fade-in\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ReserveMentor } from \"../components/ReserveMentor\";\nimport moment from \"moment\"\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\n\nexport class Mentors extends Component {\n    state = {\n        orgId: this.props.orgId,\n        eventId: this.props.eventId,\n        mentors: this.props.mentors,\n        category: 'all',\n        currentMentor: []\n    }\n\n    currWeek = LiveSiteUtils.getCurrWeek() \n\n    selectMentor = (mentorId) => {\n        this.setState({ currentMentor : {\"id\": mentorId, \"data\": this.state.mentors[mentorId] }})\n    };\n\n    chooseCategory = (name) => {\n        this.setState({ category : name })\n    }\n\n    componentDidUpdate() {\n        if (this.props.mentors != this.state.mentors) {\n            this.setState({ mentors : this.props.mentors })\n            this.setState({ currentMentor : {\"id\": this.state.currentMentor[\"id\"], \"data\": this.props.mentors[this.state.currentMentor['id']] }})\n        }\n    }\n\n    render() {\n        var weekDayData = {\n            'Sunday': [], \"Monday\": [], \"Tuesday\": [], \"Wednesday\": [], \"Thursday\": [], \"Friday\": [], 'Saturday': [], \n        }\n\n        const tags = {}\n        const tagOptions = [{key: 'all', value: 'all', text: 'All Sessions'}]\n\n        var colors = ['pink', 'purple', 'blue', 'green', 'teal', 'orange', 'gray']\n\n        Object.keys(this.state.mentors).map((mentor, idx) => {\n            var grad = idx % colors.length \n\n            if (this.state.mentors[mentor][\"category\"] != \"\") {\n                if (!Object.keys(tags).includes(this.state.mentors[mentor][\"category\"])) {\n                    tags[this.state.mentors[mentor][\"category\"]] = colors[grad]\n\n                    tagOptions.push({\n                        'key': this.state.mentors[mentor][\"category\"],\n                        \"text\":  this.state.mentors[mentor][\"category\"],\n                        'value':  this.state.mentors[mentor][\"category\"],\n                        label: { color: colors[grad], empty: true, circular: true },\n                    })\n                    \n                }\n            }\n\n\n        })\n\n        return (\n            <div>\n              \n              <p className=\"eventSubTabs\" style={{fontWeight: 'bold'}}> {this.currWeek} <span style={{float: 'right'}}>      \n             <Dropdown text=\"Categories\">\n              <Dropdown.Menu>\n                    <Dropdown.Divider />\n                    <Dropdown.Header icon='tags' content='Tag Label' />\n                    <Dropdown.Menu scrolling>\n                        {tagOptions.map((option) => (\n                        <Dropdown.Item onClick={() => this.chooseCategory(option['key'])} key={option.value} {...option} />\n                        ))}\n                    </Dropdown.Menu>\n                    </Dropdown.Menu>\n                </Dropdown></span> </p>\n\n        \n            {\n    this.state.currentMentor.length != 0 ?\n    <div id=\"calendar_body\">\n    <Card >\n        <CardBody>\n        <strong> {this.state.currentMentor[\"data\"][\"name\"] + `'s Schedule`} </strong> \n        <p style={{textDecoration: 'underline'}}> {this.state.currentMentor[\"data\"][\"link\"]} </p> \n        <Row>\n        {\n            Object.keys(weekDayData).map((day, idx) => {\n               const times = []\n                \n               this.state.currentMentor[\"data\"][\"timeslots\"].map((time, id) => { \n                   time = {\"id\": id, ...time}\n                   if (time[\"day\"] == idx) { \n                       return times.push(time) \n                    }\n                })\n\n                return (\n                    <Col style={{marginTop: 10}} sm={3}>\n                    <Card className=\"eventProjectCard\">\n                        <CardBody>\n                   \n                        <p className=\"dayOfWeek\"> {day} </p>\n                        <br></br>\n                        <p> {\n                                times.sort(function compare(a, b) {\n                                    return new Date('1970/01/01 ' + a[\"start\"]) - new Date('1970/01/01 ' + b[\"start\"]);\n                                  }).map((time) => {\n                                    if (time) {\n                                        if (time[\"filled\"] != 0) {\n                                            if (Object.keys(time[\"filled\"]).includes(this.currWeek)) {\n                                                return (\n                                                    <div className=\"unavailableTime\" style={{background: '#3430F6', textAlign: 'center', marginBottom: 5}}>\n                                                       <ReserveMentor updateCurrMentor={this.selectMentor} updateMentor={this.props.updateMentor} timeslot={time} currWeek={this.currWeek} mentor={this.state.currentMentor} orgId={this.state.orgId} eventId={this.state.eventId}> <span> {moment(time[\"start\"], 'HH:mm'). format('h:mm A')} - {moment(time[\"end\"], 'HH:mm'). format('h:mm A')}</span> </ReserveMentor>\n                                                    </div>\n                                                )\n                                            }\n                                        }\n\n                                        return (\n                                            <div className=\"availableTime\"   style={{background: 'none', marginBottom: 5, textAlign: 'center', border: '1px solid black'}}>\n                                               <ReserveMentor updateCurrMentor={this.selectMentor} updateMentor={this.props.updateMentor} timeslot={time} currWeek={this.currWeek} mentor={this.state.currentMentor} orgId={this.state.orgId} eventId={this.state.eventId}> <span style={{color: 'black'}}> {moment(time[\"start\"], 'HH:mm'). format('h:mm A')} - {moment(time[\"end\"], 'HH:mm'). format('h:mm A')}</span> </ReserveMentor>\n                                            </div>\n                                        )\n                                    }\n                                })\n                            } </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                )\n            })\n        }\n        </Row>\n\n        </CardBody>\n        </Card>\n        <br></br>\n    </div>\n    :\n    null\n}\n\n            <Row id=\"sessions_body\">\n                {\n                    this.state.mentors != \"None\"?\n\n                        Object.keys(this.state.mentors).filter((item) => {\n                            console.log(item)\n                                if (this.state.mentors[item]['category'] == this.state.category || this.state.category == 'all') {\n                                    return item \n                                }\n                            }).map((mentor) => {\n                                    return (\n                                        <Col style={{marginBottom: 30}} sm={4}>\n                                            \n                                            <FadeIn delay=\"400\">\n                                                <Card id={this.state.mentors[mentor]['name']} onClick={() => this.selectMentor(mentor)} style={{cursor: 'pointer'}}  className=\"eventProjectCard\">\n                                                <div className=\"eventProjectGradCard\"></div>\n                                                    <CardBody>\n                                                    <p style={{marginBottom: 0}} className=\"eventProjectTitle\"> {this.state.mentors[mentor][\"name\"]} </p>\n                                                    <p style={{textDecoration: 'underline', opacity: 0.4, fontSize: '13px'}}> {this.state.mentors[mentor][\"link\"]} </p>\n                                                    <div style={{borderRadius: '3px', fontSize: '12px', width: 'fit-content', color: 'black', padding: '5px',  border: '2px solid ' + tags[this.state.mentors[mentor]['category']]}}> {this.state.mentors[mentor]['category']} </div>\n\n                                                    <p > {this.state.mentors[mentor][\"descriptions\"]} </p>\n                                                    </CardBody>\n                                                </Card>\n                                            </FadeIn>\n                                        </Col>\n                                    )\n                                })\n\n            : null }\n            </Row>\n\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { LiveSiteUtils } from \"../utils/LiveSiteUtil\";\nimport moment from \"moment\"\nimport { Col, Row } from \"reactstrap\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport CsvDownloader from 'react-csv-downloader';\n\nexport class TodaySession extends Component {\n    state = {\n        orgId: this.props.orgId,\n        eventId: this.props.eventId,\n        mentors: this.props.mentors,\n    }\n\n    currWeek = LiveSiteUtils.getCurrWeek()\n    todayDate = new Date()\n\n    componentDidUpdate() {\n        if (this.props.mentors != this.state.mentors) {\n            this.setState({ mentors : this.props.mentors })\n        };\n    };\n\n    render() {\n        if (this.state.mentors == \"None\") {\n            return \"no mentors yet\"\n        }\n\n        const columns = [{field: \"section\", sorted: true, resizable: true, editable: true, resizable: true, headerName: \"Section\", width: 120}, {field: \"name\",  resizable: true, editable: true, headerName: \"Name\", width: 120}, {field: \"link\", resizable: true,  editable: true, headerName: \"Link\", width: 120}, {field: \"descriptions\", editable: true, resizable: true, headerName: \"Other\", width: 120},]\n\n        const times = []\n\n        const availTodaySess = []\n\n        Object.keys(this.state.mentors).map((mentor) => {\n            var isAvailable = false\n            this.state.mentors[mentor][\"timeslots\"].map((time) => {\n                if (time[\"day\"] == this.todayDate.getDay()) {\n                    isAvailable = true\n                }\n            })\n            if (isAvailable) {\n                availTodaySess.push(this.state.mentors[mentor])\n            }\n        })\n\n        Object.keys(availTodaySess).map((mentor) => {\n            availTodaySess[mentor][\"timeslots\"].map(time => {\n                if (time[\"day\"] == this.todayDate.getDay()) {\n                    if (!times.includes(time[\"start\"] + \"-\" + time[\"end\"])) {\n                        times.push(time[\"start\"] + \"-\" + time[\"end\"])\n\n                        columns.push({field: time[\"start\"] + \" - \" + time[\"end\"], editable: false, start: time[\"start\"], end: time[\"end\"], headerName: moment(time[\"start\"], 'HH:mm'). format('h:mm A') + \" - \" + moment(time[\"end\"], 'HH:mm'). format('h:mm A'), width: 190 })\n\n                        columns.sort(function compare(a, b) {\n                            return new Date('1970/01/01 ' + a[\"start\"]) - new Date('1970/01/01 ' + b[\"start\"]);\n                          })\n                    }\n                }\n            })\n        })\n\n        const rows = []\n\n        Object.keys(availTodaySess).map((mentor, idx) => {\n            var mentorInfo = {\n                \"id\": idx, \n                \"section\": availTodaySess[mentor][\"section\"], \n                \"name\": availTodaySess[mentor][\"name\"], \n                \"descriptions\": availTodaySess[mentor][\"descriptions\"], \n                \"link\": availTodaySess[mentor][\"link\"]\n            }\n\n            availTodaySess[mentor][\"timeslots\"].map((time) => {\n                if (time[\"day\"] == this.todayDate.getDay()) {\n                    var getMemberInfo = \"\"\n                    Object.keys(time[\"filled\"]).map((week) => {\n                        if (week == this.currWeek) {\n                            Object.keys(time[\"filled\"][week]).map((people) => {\n                                getMemberInfo += time[\"filled\"][week][people][\"name\"] + \", \"\n                            })\n                        }\n                \n\n                    })\n\n                    mentorInfo[time[\"start\"] + \" - \" + time[\"end\"]] = getMemberInfo\n                }\n            })\n\n            rows.push(mentorInfo)\n            rows.sort(function compare(a, b) {\n                return a[\"section\"] -  b[\"section\"];\n              })\n            \n        })\n\n        return (\n            <div>\n\n                <p className=\"dayOfWeek\"> {`Today's Sessions`}</p>\n                <br></br>\n                <div id=\"today-session-body\" style={{ height: '500px', background: 'white', width: '100%'}}>\n                <DataGrid filterMode={false} sortModel={false}  rows={rows} columns={columns} />\n                </div>\n             \n            </div>\n        )\n    }\n}","import React from \"react\"\nimport { Mentors } from \"./Mentors\"\nimport { TodaySession } from \"./TodaySession\"\n\n\nexport const TabManager = {\n\n    getTabComp: (name, orgId, eventId, mentors,  updateMentors) => {\n        switch (name) {\n\n            case \"mentors\":\n                return <Mentors orgId={orgId} eventId={eventId}  mentors={mentors} updateMentor={updateMentors} />\n\n            case \"today-session\":\n                return <TodaySession orgId={orgId} eventId={eventId} mentors={mentors} />\n        }\n    },\n\n    getTabNames: () =>{\n        return [{\n            'name': 'All Sessions',\n            'route': 'mentors'\n        },{\n            'name': `Today's Session`,\n            'route': 'today-session'\n        }]\n    }\n\n}","import React from \"react\"\nimport { db } from \"../firebase\"\nimport { ToastContainer } from \"react-toastify\";\nimport { TabManager } from \"./subtabs/SubTabManager\";\nimport { SessionService } from \"../networking/sessions/SessionService\";\nimport { LoadingPage } from \"../LoadingPage\";\nimport { PageNotFound } from \"../PageNotFound\";\nimport { LiveSiteUtils } from \"./utils/LiveSiteUtil\";\nimport 'intro.js/introjs.css'\nimport introJs from 'intro.js'\n\nclass LiveEventPage extends React.Component {\n    constructor() {\n        super()\n        this.orgId = \"\"\n        this.eventId = \"\"\n        this.currWeek = \"\"\n        this.state={\n            mentors: [],\n            eventInfo: [],\n            tab: \"sessions\",\n            pageComponent: [],\n            isLoading: true,\n            pageNotFound: false\n        }\n    }\n\n    getMentorData = async() => {\n        return SessionService.getAllSessions(this.props.match.params.orgId, this.props.match.params.eventId).then((eventInfo) => {\n            if (eventInfo != null) {\n                this.eventId = this.props.match.params.eventId\n                this.setState({ mentors : eventInfo[\"sessions\"] })\n                this.setState({ eventInfo : eventInfo[\"event_info\"] })\n                this.updateTabData('mentors')\n            } else {\n                this.pageNotFound();\n            }\n            this.isLoading();\n        })\n    };\n\n    updateTabData = (tabName) => {\n        this.setState({ tab : tabName })\n        this.setState({ pageComponent : TabManager.getTabComp(tabName, this.props.match.params.orgId, this.props.match.params.eventId, this.state.mentors, this.getMentorData, this.state.eventInfo) })\n    };\n\n    pageNotFound() {\n        this.setState({ pageNotFound : true })\n    };\n\n    isLoading() {\n        this.setState({ isLoading : false })\n    };\n\n    startTutorial = () => {\n        setTimeout(() => {\n            var introStep = 0\n            introJs().setOptions({\n                skipLabel: \"\",\n                highlightClass: true,\n                exitOnOverlayClick: false,\n                showProgress: true,\n                steps: [{\n                    title: 'Welcome back! 👋',\n                    intro: `Now let's explore the event.`\n                }, {\n                    title: 'Sessions',\n                  element: document.getElementById('sessions_body'),\n                  intro: \"Sessions will be in events. Sessions can be created by anyone, and it can represent a TA, group event, mentor, etc.\"\n                }, {\n                    title: 'Calendar',\n                  element: document.getElementById('calendar_body'),\n                  intro: \"View the session`s available times for this week, and reserve any of the time slots.\"\n                },  {\n                    title: `Today's Sessions`,\n                  element: document.getElementById('today-session-body'),\n                  intro: \"You can create new events by clicking on the button and entering a name.\"\n                }, {\n                    title: `Create Sessions`,\n                  element: document.getElementById('create-new-session'),\n                  intro: \"You can create new sessions by clicking on this link. This will open a new window for you to fill out details.\"\n                },\n                {\n                    title: `That's it!`,\n                  intro: \"Click on the sample project. See you there! 👋\"\n                }\n            ]\n              }).start().onafterchange(() => {\n                  introStep += 1;\n                  if (introStep == 2) {\n                      setTimeout(() => {\n                        document.getElementById('Anna Locke').click()\n                      }, 1000)\n                  }\n                  if (introStep == 3) {\n                      this.updateTabData('today-session')\n                  }\n              }).oncomplete(() => {\n                  localStorage.setItem('new_user', false)\n              })\n                  \n        }, 1300)\n    }\n\n    componentDidMount() {\n        this.getMentorData().then(() => {\n            if (localStorage.getItem('new_user') == \"true\" && this.eventId == \"cs-13xx-office-hours\") {\n                this.startTutorial()\n                console.log(this.eventId)\n            }\n            console.log(this.eventId)\n        })\n    }\n    \n    render() {\n        if (this.state.pageNotFound) {\n            return <PageNotFound />\n        }\n\n        if (this.state.isLoading) {\n            return <LoadingPage />\n        }\n\n        return (\n            <div className=\"eventBody\">\n                <div className=\"eventHeader\">\n                    <div className=\"container\">\n                        <row>\n                        <img style={{marginTop: 20, marginRight: 30}} src={require('../../assets/icon.svg')} />\n                            <a onClick={() => window.location.href = '/'} style={{color: 'white', position: 'absolute', top: '22px', cursor: 'pointer'}}> My Events </a>\n                        </row>\n                    </div>\n                        </div>      \n                            <div className=\"eventWhiteHeader\">\n                                <div className=\"container\">\n                                    <p className=\"eventWhiteHeaderTitle\" style={{marginBottom: 5, marginTop: 25}}>{this.props.match.params.eventId}</p>\n\n                                    <p onClick={() => window.open(\"/c/\" + this.props.match.params.orgId + \"/\" + this.props.match.params.eventId)} className=\"liveLinkHeader\">{window.location.origin.toString() + \"/c/\" + this.props.match.params.orgId + \"/\" + this.props.match.params.eventId}</p>\n\n                                    <p style={{color: 'GrayText', paddingTop: 10, paddingBottom: 30}}> {this.state.eventInfo[\"description\"]} </p>\n\n                                <row style={{position: 'absolute', display: 'block', bottom: '10px'}}>\n                                    {\n                                        TabManager.getTabNames().map((tab) => {\n                                            return (\n                                                <a className={tab[\"route\"] == this.state.tab ? \"nestedTabHover nestedTab\": \"nestedTab\" } onClick={() => this.updateTabData(tab[\"route\"])} style={{cursor: 'pointer', marginRight: 16}} > {tab[\"name\"]} </a>\n                                            )\n                                        })\n                                    }\n                                    <a id=\"create-new-session\" style={{cursor: 'pointer'}} onClick={() =>  window.open('/createsession/' + this.props.match.params.orgId + '/' + this.props.match.params.eventId)}> Create Session</a>\n                                </row>\n\n                            </div>\n                        </div>\n                  \n                <div className=\"eventPageBody container\">\n                    <p style={{fontSize: '13px'}}> {this.state.eventInfo[\"instruction\"]} </p>\n\n                    {this.state.pageComponent}\n\n                </div>\n                <ToastContainer/>\n\n            </div>\n        )\n    }\n}\n\nexport default LiveEventPage;","import React from \"react\"\nimport AvailableTimes from 'react-available-times';\nimport { Slide, toast, ToastContainer } from \"react-toastify\";\nimport { Button, Col, Label, Row } from \"reactstrap\";\nimport { Form, Input, TextArea } from \"semantic-ui-react\";\nimport { db } from \"../firebase\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ReactFormBuilder } from 'react-form-builder2';\nimport 'react-form-builder2/dist/app.css';\nimport { SessionService } from \"../networking/sessions/SessionService\";\n\nclass MentorForm extends React.Component {\n    constructor() {\n        super()\n        this.orgId = \"\"\n        this.eventId = \"\"\n        this.uid= \"\"\n        this.state={\n            name: \"\",\n            link: \"\",\n            section: \"\",\n            description: \"\",\n            category: \"\",\n            key: \"\",\n            timeSlots: [],\n        }\n    }\n\n    submitMentor = async() => {\n\n        if (this.state.name == \"\") {\n            return toast.dark('Please enter your name',{ transition : Slide  })\n        }\n        if (this.state.timeSlots) {\n            if (this.state.timeSlots.length == 0) {\n                return toast.dark('Please enter your timeslots',{ transition : Slide  })\n            }\n        }\n\n        const restructureDates = []\n\n        this.state.timeSlots.map((timeslot) => {\n            restructureDates.push({\n                \"day\": timeslot[\"start\"].getDay(),\n                \"start\": timeslot[\"start\"].toTimeString(),\n                \"end\": timeslot[\"end\"].toTimeString(),\n                \"filled\": {}\n            })\n        })\n\n        const session = { \n            \"section\": this.state.section,\n            \"name\": this.state.name,\n            \"link\": this.state.link,\n            \"category\": this.state.category.toLocaleLowerCase(),\n            \"descriptions\": this.state.description,\n            \"timeslots\": restructureDates,\n            \"key\": this.state.key\n        }\n\n        SessionService.createSession(this.props.match.params.orgId, this.props.match.params.eventId, session).then((session) => {\n            if (session) {\n                toast.dark('Updated sessions!',{ transition : Slide  })\n                toast.dark('Now redirecting you back to all sessions', { transition : Slide  })\n\n                setTimeout(() => {\n                    window.open(\"/c/\" + this.props.match.params.orgId + \"/\" + this.props.match.params.eventId)\n                    }, 3500)\n                } else {\n                    toast.dark('Key is incorrect.',{ transition : Slide  })\n                }\n            })\n        };\n    \n      render() {\n                   \n        return (\n            <div className=\"eventBody\">\n                    <div className=\"eventHeader\">\n                        <div className=\"container\">\n                            <img style={{marginTop: 20}} src={require('../../assets/icon.svg')} />\n                        </div>\n                </div>  \n\n            <div style={{paddingTop: 80}} className=\"eventPageBody container\">\n\n                <br></br>\n          \n            <p className=\"eventWhiteHeaderTitle\" style={{marginBottom: 5, marginTop: 25}}>{this.props.match.params.eventId}</p>\n            <p className=\"eventWhiteHeaderTitle\" style={{marginBottom: 5, fontSize: 16}}>{this.props.match.params.orgId}</p>\n\n            <Row style={{marginLeft: 2}}>\n            <Input style={{marginRight: 30}} placeholder=\"Section (Optional)\" onChange={(text) => this.setState({ section : text.target.value }) }  />\n              <Input style={{marginRight: 30}} placeholder=\"Full Name\" onChange={(text) => this.setState({ name : text.target.value }) }  />\n              <Input placeholder=\"Link (Optional)\" style={{marginRight: 30}}  onChange={(text) => this.setState({ link : text.target.value })}  />\n              <Input placeholder=\"Category (Optional)\" style={{marginRight: 30}}  onChange={(text) => this.setState({ category : text.target.value })}  />\n\n              </Row>\n              <br></br>\n              <Form>\n                <TextArea  placeholder=\"Description\" onChange={(text) => this.setState({ description : text.target.value })} placeholder='Tell us more' />\n            </Form>\n            <br></br>\n\n                    <AvailableTimes\n                \n                    weekStartsOn=\"monday\"\n                    onClick={(date) => console.log(date)}\n                    calendars={[\n                        {\n                        id: 'work',\n                        title: 'Work',\n                        foregroundColor: '#ff00ff',\n                        backgroundColor: '#f0f0f0',\n                        selected: true,\n                        },\n                    ]}\n                    onChange={(selections) => this.setState({ timeSlots : selections })}         \n                    height={600}\n                    recurring={false}\n                    availableDays={['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']}\n                    availableHourRange={{ start: 0, end: 24 }}\n                    />\n                    <br></br>\n                    <br></br>\n                    <Label style={{float: 'right'}}> Key </Label>\n                    <br></br>\n                    <p style={{float: 'right'}}> If the coordinator didn't give you a key, please leave this empty.</p>\n                    <br></br>\n                    <br></br>\n                    <Input style={{marginRight: 30, float: 'right'}} placeholder=\"Key\" onChange={(text) => this.setState({ key : text.target.value }) }  />\n                    <br></br>\n                    <br></br>\n                    <Button className=\"createEventBtn float-right\" onClick={this.submitMentor}> Submit </Button>\n\n            </div>\n            <ToastContainer />\n          </div>\n        );\n      }\n}\n\nexport default MentorForm;","import React from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { ReactFormBuilder, ReactFormGenerator } from \"react-form-builder2\";\nimport { Button, Card, CardBody, Col, Row } from \"reactstrap\";\nimport { Icon } from \"semantic-ui-react\";\nimport { db } from \"../firebase\";\nimport { LoadingPage } from \"../LoadingPage\";\nimport { EventService } from \"../networking/events/EventService\";\nimport { PageNotFound } from \"../PageNotFound\";\n\nclass EventPage extends React.Component {\n    constructor() {\n        super();\n        this.orgId = \"\"\n        this.uid = \"\"\n        this.eventId = \"\"\n        this.currWeek = \"\"\n        this.state={\n            eventData: [],\n            pageNotFound: false,\n            isLoading: true,\n        }\n    }\n\n    getEventData = async(orgId, eventId) => {\n        await EventService.getEvent(orgId, eventId).then((event) => {\n            if (event) {\n                this.setState({ eventData : event });\n            } else {\n                this.pageNotFound();\n            }\n            this.isLoading();\n        })\n    };\n\n    pageNotFound() {\n        this.setState({ pageNotFound : true })\n    };\n\n    isLoading() {\n        this.setState({ isLoading : false })\n    };\n\n    componentDidMount() {\n    \n        this.getEventData(this.props.match.params.orgId, this.props.match.params.eventId);\n    };\n\n    render() {\n        if (this.state.pageNotFound) {\n            return <PageNotFound />\n        }\n\n       if (this.state.isLoading) {\n        return <LoadingPage />\n    }\n\n      \n        return (\n            <div className=\"eventBody\">\n            <div className=\"eventHeader\">\n                <div className=\"container\">\n                    <img style={{marginTop: 20}} src={require('../../assets/icon.svg')} />\n\n                    <p style={{marginTop: 23}} className=\"userProfile float-right\"> user settings</p>\n                </div>\n            </div>            \n            <div className=\"eventWhiteHeader\">\n                        <div style={{marginTop: 10}} className=\"container\">\n                        <Button style={{marginBottom: 0}} className=\"backBtn\" onClick={() => window.location.href = '/events/' + this.props.match.params.orgId + '/all'}> <Icon name=\"long arrow alternate left\" /> Back </Button>\n\n                            <span> <p style={{marginBottom: 8}} className=\"eventWhiteHeaderTitle text-center\">{this.props.match.params.eventId}</p>\n                            </span>\n\n                            <Row style={{justifyContent: 'center'}}>\n                            <p onClick={() => window.open(\"/c/\" + this.props.match.params.orgId + \"/\" + this.props.match.params.eventId)} className=\"liveLinkHeader text-center\">{window.location.origin.toString() + \"/c/\" + this.props.match.params.orgId + \"/\" + this.props.match.params.eventId}</p>\n                            </Row>\n                    </div>\n                    \n                </div>\n\n            <div className=\"eventPageBody container\">\n\n                <p className=\"eventSubTabs\"> all sessions </p>\n                    <Row>\n                    {\n                        Object.keys(this.state.eventData).map((mentor) => {\n                            return (\n                                <Col style={{marginBottom: 30}} sm={4}>\n                                <FadeIn delay=\"400\">\n                                    <Card style={{cursor: 'pointer'}}  className=\"eventProjectCard\">\n                                        <div className=\"eventProjectGradCard\"></div>\n                                        <CardBody>\n                                        {/* <p style={{marginBottom: 0}} className=\"eventProjectTitle\"> {this.state.eventData[\"mentors\"][mentor][\"name\"]} </p>\n                                        <p style={{textDecoration: 'underline', opacity: 0.4, fontSize: '13px'}}> {this.state.eventData[\"mentors\"][mentor][\"link\"]} </p>\n                                        <p > {this.state.eventData[\"mentors\"][mentor][\"descriptions\"]} </p> */}\n                                    </CardBody>\n                                    </Card>\n                                </FadeIn>\n                            </Col>\n                            )    \n                        })\n                    }\n                </Row>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default EventPage;","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport './styles/main.scss';\nimport './styles/homepage.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LoginPage from './pages/LoginPage';\nimport AllEventsPage from './pages/allevents/AllEventsPage';\nimport LiveEventPage from './pages/LiveEvent/LiveEventPage';\nimport MentorForm from './pages/mentors/MentorForm';\nimport EventPage from './pages/Event/EventPage';\nimport { OrgService } from './pages/networking/organizations/OrgService';\nimport { db } from './pages/firebase';\nimport { EventService } from './pages/networking/events/EventService';\nimport { LoadingPage } from './pages/LoadingPage';\nimport { PageNotFound } from './pages/PageNotFound';\n\nconst getBasename = () => {\n  return `/${process.env.PUBLIC_URL.split('/').pop()}`;\n};\n\nconst checkOrgId = async(userToken) => {\n  var orgId = localStorage.getItem('org_id')\n  if (orgId == undefined) {\n      return await OrgService.getAllOrganizations(userToken).then((org) => {\n        if (org) {\n          orgId = org[0][\"_id\"]\n          localStorage.setItem('org_id', orgId)\n          return orgId;\n        }\n      })\n  }\n  return orgId;\n}\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state={\n      orgId: '',\n      user: false,\n      isLoading: true,\n    }\n  }\n\n  getOrgId = async() => {\n    db.auth().onAuthStateChanged(async(user) => {\n      if (user) {\n        this.setState({ user : true })\n        checkOrgId(await EventService.getUserToken()).then((orgId) => {\n          this.setState({ orgId : orgId })\n        })\n      }\n      this.setState({ isLoading : false })\n    });\n  };\n\n  async componentDidMount() {\n    this.getOrgId()\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingPage />\n    }\n\n    return (\n      <BrowserRouter basename={getBasename()}>\n            <Switch>\n\n\n<Route\n          exact\n          path='/'\n          component={ this.state.user ? (props) => { return  <AllEventsPage {...props} orgId={this.state.orgId}  /> } : (props) => { return  <LoginPage /> }} \n          />\n\n        <Route\n          exact\n          path='/login'\n          component={LoginPage}\n          />\n\n        <Route\n          exact\n          path='/events/:orgId/all'\n          component={ this.state.user ? (props) => { return  <AllEventsPage {...props}  /> } : (props) => { return  <LoginPage /> }}\n          />\n\n\n      <Route\n          exact\n          path='/c/:orgId/:eventId'\n          component={LiveEventPage}\n        />\n\n      <Route\n          exact\n          path='/createsession/:orgId/:eventId'\n          component={MentorForm}\n        />\n\n      <Route\n          exact\n          path='/events/info/:orgId/:eventId/'\n          component={ this.state.user ? (props) => { return  <EventPage {...props}  /> } : (props) => { return  <LoginPage /> }}\n        />\n          </Switch>\n        </BrowserRouter>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import * as FullStory from '@fullstory/browser';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}